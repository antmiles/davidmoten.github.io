<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="hilbert-curve"><sessioninfo id="hp-2b2063a7" start="1487844456341" dump="1487844458294"/><sessioninfo id="hp-cb2b6d2b" start="1487845358141" dump="1487845361806"/><package name="org/davidmoten/hilbert/exceptions"><class name="org/davidmoten/hilbert/exceptions/IORuntimeException"><method name="&lt;init&gt;" desc="(Ljava/io/IOException;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IORuntimeException.java"><line nr="10" mi="0" ci="10" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/davidmoten/hilbert"><class name="org/davidmoten/hilbert/Util"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="([B)V" line="11"><counter type="INSTRUCTION" missed="0" covered="151"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="110" covered="180"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/hilbert/HilbertCurve$HilbertCurveBuilder"><method name="&lt;init&gt;" desc="(I)V" line="59"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensions" desc="(I)Lorg/davidmoten/hilbert/HilbertCurve;" line="65"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="125"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/hilbert/HilbertCurve$1"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/davidmoten/hilbert/HilbertCurveRenderer"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderToFile" desc="(IILjava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="20" covered="45"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(II)Ljava/awt/image/BufferedImage;" line="31"><counter type="INSTRUCTION" missed="0" covered="299"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="188" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="227" covered="373"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/hilbert/HilbertCurve"><method name="&lt;init&gt;" desc="(II)V" line="38"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bits" desc="(I)Lorg/davidmoten/hilbert/HilbertCurve$HilbertCurveBuilder;" line="53"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="([J)Ljava/math/BigInteger;" line="71"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="point" desc="(Ljava/math/BigInteger;)[J" line="76"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="point" desc="(J)[J" line="82"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transposedIndexToPoint" desc="([J)[J" line="97"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pointToTransposedIndex" desc="([J)[J" line="118"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transpose" desc="(Ljava/math/BigInteger;)[J" line="123"><counter type="INSTRUCTION" missed="0" covered="185"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transposedIndex" desc="(I[J)[J" line="139"><counter type="INSTRUCTION" missed="0" covered="457"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transposedIndexToPoint" desc="(I[J)[J" line="171"><counter type="INSTRUCTION" missed="0" covered="329"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBigInteger" desc="(I[J)Ljava/math/BigInteger;" line="207"><counter type="INSTRUCTION" missed="0" covered="269"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="620" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="639" covered="1460"/><counter type="BRANCH" missed="0" covered="40"/><counter type="LINE" missed="0" covered="75"/><counter type="COMPLEXITY" missed="3" covered="33"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HilbertCurve.java"><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="13" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="34" mb="0" cb="2"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="35" mb="0" cb="2"/><line nr="66" mi="0" ci="15" mb="0" cb="0"/><line nr="71" mi="0" ci="36" mb="0" cb="2"/><line nr="72" mi="0" ci="15" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="36" mb="0" cb="2"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="82" mi="0" ci="12" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="0"/><line nr="127" mi="0" ci="11" mb="0" cb="0"/><line nr="128" mi="0" ci="42" mb="0" cb="2"/><line nr="129" mi="0" ci="22" mb="0" cb="2"/><line nr="130" mi="0" ci="16" mb="0" cb="0"/><line nr="131" mi="0" ci="15" mb="0" cb="0"/><line nr="132" mi="0" ci="17" mb="0" cb="0"/><line nr="135" mi="0" ci="18" mb="0" cb="0"/><line nr="139" mi="0" ci="13" mb="0" cb="0"/><line nr="140" mi="0" ci="12" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="145" mi="0" ci="45" mb="0" cb="2"/><line nr="146" mi="0" ci="11" mb="0" cb="0"/><line nr="147" mi="0" ci="32" mb="0" cb="2"/><line nr="148" mi="0" ci="26" mb="0" cb="2"/><line nr="149" mi="0" ci="15" mb="0" cb="0"/><line nr="151" mi="0" ci="26" mb="0" cb="0"/><line nr="152" mi="0" ci="14" mb="0" cb="0"/><line nr="153" mi="0" ci="14" mb="0" cb="0"/><line nr="157" mi="0" ci="41" mb="0" cb="2"/><line nr="158" mi="0" ci="18" mb="0" cb="0"/><line nr="159" mi="0" ci="18" mb="0" cb="0"/><line nr="160" mi="0" ci="45" mb="0" cb="2"/><line nr="161" mi="0" ci="28" mb="0" cb="2"/><line nr="162" mi="0" ci="13" mb="0" cb="0"/><line nr="163" mi="0" ci="41" mb="0" cb="2"/><line nr="164" mi="0" ci="14" mb="0" cb="0"/><line nr="166" mi="0" ci="18" mb="0" cb="0"/><line nr="171" mi="0" ci="13" mb="0" cb="0"/><line nr="172" mi="0" ci="12" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="177" mi="0" ci="15" mb="0" cb="0"/><line nr="180" mi="0" ci="33" mb="0" cb="2"/><line nr="181" mi="0" ci="18" mb="0" cb="0"/><line nr="182" mi="0" ci="23" mb="0" cb="0"/><line nr="184" mi="0" ci="45" mb="0" cb="2"/><line nr="185" mi="0" ci="11" mb="0" cb="0"/><line nr="186" mi="0" ci="33" mb="0" cb="2"/><line nr="187" mi="0" ci="26" mb="0" cb="2"/><line nr="188" mi="0" ci="15" mb="0" cb="0"/><line nr="190" mi="0" ci="26" mb="0" cb="0"/><line nr="191" mi="0" ci="14" mb="0" cb="0"/><line nr="192" mi="0" ci="14" mb="0" cb="0"/><line nr="195" mi="0" ci="18" mb="0" cb="0"/><line nr="207" mi="0" ci="12" mb="0" cb="0"/><line nr="208" mi="0" ci="12" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="210" mi="0" ci="13" mb="0" cb="0"/><line nr="211" mi="0" ci="32" mb="0" cb="2"/><line nr="212" mi="0" ci="33" mb="0" cb="2"/><line nr="213" mi="0" ci="26" mb="0" cb="2"/><line nr="214" mi="0" ci="10" mb="0" cb="0"/><line nr="216" mi="0" ci="17" mb="0" cb="0"/><line nr="218" mi="0" ci="20" mb="0" cb="0"/><line nr="220" mi="0" ci="30" mb="0" cb="2"/><line nr="221" mi="0" ci="9" mb="0" cb="0"/><line nr="223" mi="0" ci="19" mb="0" cb="0"/><line nr="225" mi="0" ci="9" mb="0" cb="0"/><line nr="226" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="740" covered="1585"/><counter type="BRANCH" missed="3" covered="45"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="12" covered="39"/><counter type="METHOD" missed="10" covered="17"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="HilbertCurveRenderer.java"><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="24" mi="0" ci="15" mb="0" cb="0"/><line nr="25" mi="8" ci="0" mb="0" cb="0"/><line nr="26" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="13" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="13" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="39" mb="0" cb="2"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="0" ci="29" mb="0" cb="0"/><line nr="47" mi="0" ci="29" mb="0" cb="0"/><line nr="48" mi="0" ci="13" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="227" covered="373"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Util.java"><line nr="5" mi="0" ci="9" mb="0" cb="0"/><line nr="7" mi="0" ci="8" mb="0" cb="0"/><line nr="11" mi="0" ci="20" mb="0" cb="2"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="18" mb="0" cb="0"/><line nr="15" mi="0" ci="12" mb="0" cb="0"/><line nr="17" mi="0" ci="21" mb="0" cb="2"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="13" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="180"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1077" covered="2138"/><counter type="BRANCH" missed="3" covered="55"/><counter type="LINE" missed="2" covered="121"/><counter type="COMPLEXITY" missed="18" covered="53"/><counter type="METHOD" missed="16" covered="26"/><counter type="CLASS" missed="1" covered="4"/></package><counter type="INSTRUCTION" missed="1111" covered="2168"/><counter type="BRANCH" missed="4" covered="56"/><counter type="LINE" missed="2" covered="123"/><counter type="COMPLEXITY" missed="22" covered="56"/><counter type="METHOD" missed="19" covered="29"/><counter type="CLASS" missed="1" covered="5"/></report>