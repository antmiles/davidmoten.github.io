<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="hilbert-curve"><sessioninfo id="hp-366165cf" start="1487970845912" dump="1487970848230"/><sessioninfo id="hp-d6bec0fe" start="1487972057743" dump="1487972061347"/><package name="org/davidmoten/hilbert/exceptions"><class name="org/davidmoten/hilbert/exceptions/IORuntimeException"><method name="&lt;init&gt;" desc="(Ljava/io/IOException;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IORuntimeException.java"><line nr="10" mi="0" ci="10" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/davidmoten/hilbert"><class name="org/davidmoten/hilbert/Util"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="([B)V" line="11"><counter type="INSTRUCTION" missed="0" covered="151"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="110" covered="180"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/hilbert/SmallHilbertCurve$Builder"><method name="&lt;init&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bits" desc="(I)Lorg/davidmoten/hilbert/SmallHilbertCurve$Builder;" line="96"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensions" desc="(I)Lorg/davidmoten/hilbert/SmallHilbertCurve;" line="101"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="105"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/hilbert/SmallHilbertCurve$1"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/davidmoten/hilbert/SmallHilbertCurve"><method name="&lt;init&gt;" desc="(II)V" line="21"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="([J)J" line="40"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="point" desc="(J)[J" line="56"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toIndex" desc="([J)J" line="60"><counter type="INSTRUCTION" missed="0" covered="198"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transposeLong" desc="(J)[J" line="77"><counter type="INSTRUCTION" missed="0" covered="146"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="207" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="226" covered="473"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/hilbert/HilbertCurve$1"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/davidmoten/hilbert/HilbertCurve$Builder"><method name="&lt;init&gt;" desc="(I)V" line="56"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensions" desc="(I)Lorg/davidmoten/hilbert/HilbertCurve;" line="63"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="160"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/hilbert/HilbertCurveRenderer"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderToFile" desc="(IILjava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="20" covered="45"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(II)Ljava/awt/image/BufferedImage;" line="31"><counter type="INSTRUCTION" missed="0" covered="334"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="194" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="233" covered="408"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/hilbert/HilbertCurve"><method name="&lt;init&gt;" desc="(II)V" line="26"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bits" desc="(I)Lorg/davidmoten/hilbert/HilbertCurve$Builder;" line="43"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="small" desc="()Lorg/davidmoten/hilbert/SmallHilbertCurve$Builder;" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="([J)Ljava/math/BigInteger;" line="80"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="point" desc="(Ljava/math/BigInteger;)[J" line="99"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="point" desc="(J)[J" line="116"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transpose" desc="(Ljava/math/BigInteger;)[J" line="141"><counter type="INSTRUCTION" missed="0" covered="171"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transposedIndex" desc="(I[J)[J" line="173"><counter type="INSTRUCTION" missed="0" covered="456"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transposedIndexToPoint" desc="(I[J)[J" line="215"><counter type="INSTRUCTION" missed="0" covered="317"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toIndex" desc="([J)Ljava/math/BigInteger;" line="252"><counter type="INSTRUCTION" missed="0" covered="216"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="561" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="580" covered="1378"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="66"/><counter type="COMPLEXITY" missed="3" covered="31"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HilbertCurve.java"><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="34" mb="0" cb="2"/><line nr="58" mi="0" ci="35" mb="0" cb="2"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="35" mb="0" cb="2"/><line nr="64" mi="0" ci="15" mb="0" cb="0"/><line nr="80" mi="0" ci="36" mb="0" cb="2"/><line nr="81" mi="0" ci="14" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="0"/><line nr="100" mi="0" ci="36" mb="0" cb="2"/><line nr="101" mi="0" ci="14" mb="0" cb="0"/><line nr="116" mi="0" ci="12" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="0"/><line nr="143" mi="0" ci="44" mb="0" cb="2"/><line nr="144" mi="0" ci="38" mb="0" cb="2"/><line nr="145" mi="0" ci="17" mb="0" cb="0"/><line nr="146" mi="0" ci="15" mb="0" cb="0"/><line nr="147" mi="0" ci="16" mb="0" cb="0"/><line nr="150" mi="0" ci="18" mb="0" cb="0"/><line nr="173" mi="0" ci="13" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="0"/><line nr="179" mi="0" ci="45" mb="0" cb="2"/><line nr="180" mi="0" ci="11" mb="0" cb="0"/><line nr="181" mi="0" ci="32" mb="0" cb="2"/><line nr="182" mi="0" ci="26" mb="0" cb="2"/><line nr="183" mi="0" ci="15" mb="0" cb="0"/><line nr="185" mi="0" ci="26" mb="0" cb="0"/><line nr="186" mi="0" ci="14" mb="0" cb="0"/><line nr="187" mi="0" ci="14" mb="0" cb="0"/><line nr="191" mi="0" ci="41" mb="0" cb="2"/><line nr="192" mi="0" ci="18" mb="0" cb="0"/><line nr="193" mi="0" ci="18" mb="0" cb="0"/><line nr="194" mi="0" ci="45" mb="0" cb="2"/><line nr="195" mi="0" ci="28" mb="0" cb="2"/><line nr="196" mi="0" ci="13" mb="0" cb="0"/><line nr="197" mi="0" ci="41" mb="0" cb="2"/><line nr="198" mi="0" ci="14" mb="0" cb="0"/><line nr="200" mi="0" ci="18" mb="0" cb="0"/><line nr="215" mi="0" ci="13" mb="0" cb="0"/><line nr="218" mi="0" ci="10" mb="0" cb="0"/><line nr="222" mi="0" ci="15" mb="0" cb="0"/><line nr="225" mi="0" ci="33" mb="0" cb="2"/><line nr="226" mi="0" ci="18" mb="0" cb="0"/><line nr="227" mi="0" ci="23" mb="0" cb="0"/><line nr="229" mi="0" ci="45" mb="0" cb="2"/><line nr="230" mi="0" ci="11" mb="0" cb="0"/><line nr="231" mi="0" ci="33" mb="0" cb="2"/><line nr="232" mi="0" ci="26" mb="0" cb="2"/><line nr="233" mi="0" ci="15" mb="0" cb="0"/><line nr="235" mi="0" ci="26" mb="0" cb="0"/><line nr="236" mi="0" ci="14" mb="0" cb="0"/><line nr="237" mi="0" ci="14" mb="0" cb="0"/><line nr="240" mi="0" ci="18" mb="0" cb="0"/><line nr="252" mi="0" ci="11" mb="0" cb="0"/><line nr="253" mi="0" ci="12" mb="0" cb="0"/><line nr="254" mi="0" ci="14" mb="0" cb="0"/><line nr="255" mi="0" ci="33" mb="0" cb="2"/><line nr="256" mi="0" ci="33" mb="0" cb="2"/><line nr="257" mi="0" ci="26" mb="0" cb="2"/><line nr="258" mi="0" ci="26" mb="0" cb="0"/><line nr="260" mi="0" ci="17" mb="0" cb="0"/><line nr="262" mi="0" ci="20" mb="0" cb="0"/><line nr="265" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="692" covered="1538"/><counter type="BRANCH" missed="3" covered="45"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="12" covered="38"/><counter type="METHOD" missed="10" covered="16"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="SmallHilbertCurve.java"><line nr="21" mi="0" ci="9" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="12" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="36" mb="0" cb="2"/><line nr="41" mi="0" ci="14" mb="0" cb="0"/><line nr="56" mi="0" ci="14" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="0" ci="14" mb="0" cb="0"/><line nr="63" mi="0" ci="33" mb="0" cb="2"/><line nr="64" mi="0" ci="33" mb="0" cb="2"/><line nr="65" mi="0" ci="26" mb="0" cb="2"/><line nr="66" mi="0" ci="14" mb="0" cb="0"/><line nr="68" mi="0" ci="17" mb="0" cb="0"/><line nr="70" mi="0" ci="20" mb="0" cb="0"/><line nr="73" mi="0" ci="18" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="41" mb="0" cb="2"/><line nr="79" mi="0" ci="26" mb="0" cb="2"/><line nr="80" mi="0" ci="17" mb="0" cb="0"/><line nr="81" mi="0" ci="15" mb="0" cb="0"/><line nr="82" mi="0" ci="16" mb="0" cb="0"/><line nr="85" mi="0" ci="18" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="101" mi="0" ci="38" mb="0" cb="2"/><line nr="102" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="316" covered="578"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="13" covered="19"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="HilbertCurveRenderer.java"><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="24" mi="0" ci="15" mb="0" cb="0"/><line nr="25" mi="8" ci="0" mb="0" cb="0"/><line nr="26" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="13" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="13" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="15" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="0" cb="0"/><line nr="44" mi="0" ci="13" mb="0" cb="0"/><line nr="45" mi="0" ci="39" mb="0" cb="2"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="47" mi="0" ci="35" mb="0" cb="0"/><line nr="49" mi="0" ci="35" mb="0" cb="0"/><line nr="51" mi="0" ci="13" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="233" covered="408"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Util.java"><line nr="5" mi="0" ci="9" mb="0" cb="0"/><line nr="7" mi="0" ci="8" mb="0" cb="0"/><line nr="11" mi="0" ci="20" mb="0" cb="2"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="18" mb="0" cb="0"/><line nr="15" mi="0" ci="12" mb="0" cb="0"/><line nr="17" mi="0" ci="21" mb="0" cb="2"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="13" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="180"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1351" covered="2704"/><counter type="BRANCH" missed="7" covered="71"/><counter type="LINE" missed="2" covered="145"/><counter type="COMPLEXITY" missed="31" covered="71"/><counter type="METHOD" missed="26" covered="37"/><counter type="CLASS" missed="2" covered="6"/></package><counter type="INSTRUCTION" missed="1385" covered="2734"/><counter type="BRANCH" missed="8" covered="72"/><counter type="LINE" missed="2" covered="147"/><counter type="COMPLEXITY" missed="35" covered="74"/><counter type="METHOD" missed="29" covered="40"/><counter type="CLASS" missed="2" covered="7"/></report>