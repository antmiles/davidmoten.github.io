<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="rxjava2-extras"><sessioninfo id="hp-3fa4242" start="1486955338423" dump="1486955381893"/><sessioninfo id="hp-ac9bde1f" start="1487019536499" dump="1487019583688"/><package name="com/github/davidmoten/rx2/util"><class name="com/github/davidmoten/rx2/util/ZippedEntry"><method name="&lt;init&gt;" desc="(Ljava/util/zip/ZipEntry;Ljava/io/InputStream;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInputStream" desc="()Ljava/io/InputStream;" line="37"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTime" desc="()J" line="45"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCrc" desc="()J" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()J" line="65"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompressedSize" desc="()J" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethod" desc="()I" line="73"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtra" desc="()[B" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComment" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="142" covered="235"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/util/Pair"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lcom/github/davidmoten/rx2/util/Pair;" line="14"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="a" desc="()Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="b" desc="()Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="left" desc="()Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="right" desc="()Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="35"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="44"><counter type="INSTRUCTION" missed="0" covered="343"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_1" desc="()Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_2" desc="()Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="304" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="323" covered="669"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="3" covered="25"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ZippedEntry.java"><line nr="21" mi="0" ci="9" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="23" mi="0" ci="11" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="28" mi="0" ci="11" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="11" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="142" covered="235"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Pair.java"><line nr="8" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="10" mb="0" cb="0"/><line nr="10" mi="0" ci="10" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="13" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="40" mb="0" cb="2"/><line nr="38" mi="0" ci="40" mb="0" cb="2"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="21" mb="0" cb="2"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="29" mb="0" cb="2"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="32" mb="0" cb="2"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="19" mb="0" cb="0"/><line nr="51" mi="0" ci="21" mb="0" cb="2"/><line nr="52" mi="0" ci="21" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="33" mb="0" cb="2"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="30" mb="0" cb="2"/><line nr="57" mi="0" ci="21" mb="0" cb="2"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="33" mb="0" cb="2"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="18" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="323" covered="669"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="3" covered="25"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="465" covered="904"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="0" covered="61"/><counter type="COMPLEXITY" missed="7" covered="37"/><counter type="METHOD" missed="6" covered="25"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/github/davidmoten/rx2/buffertofile"><class name="com/github/davidmoten/rx2/buffertofile/Options"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;ILio/reactivex/Scheduler;)V" line="30"><counter type="INSTRUCTION" missed="10" covered="91"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileFactory" desc="()Ljava/util/concurrent/Callable;" line="40"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pageSizeBytes" desc="()I" line="44"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduler" desc="()Lio/reactivex/Scheduler;" line="48"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderFlowable" desc="()Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderFlowable;" line="52"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderObservable" desc="()Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderObservable;" line="56"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="165"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/Serializers$WrappedDataSerializer"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/buffertofile/DataSerializer;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Ljava/lang/Object;)[B" line="56"><counter type="INSTRUCTION" missed="0" covered="111"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="([B)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="206"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/Serializers"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="javaIO" desc="()Lcom/github/davidmoten/rx2/buffertofile/Serializer;" line="24"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bytes" desc="()Lcom/github/davidmoten/rx2/buffertofile/Serializer;" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="utf8" desc="()Lcom/github/davidmoten/rx2/buffertofile/Serializer;" line="34"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="string" desc="(Ljava/nio/charset/Charset;)Lcom/github/davidmoten/rx2/buffertofile/Serializer;" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lcom/github/davidmoten/rx2/buffertofile/DataSerializer;)Lcom/github/davidmoten/rx2/buffertofile/Serializer;" line="42"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="112"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/Options$BuilderFlowable$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderFlowable;Lcom/github/davidmoten/rx2/buffertofile/Options;Lcom/github/davidmoten/rx2/buffertofile/Serializer;)V" line="143"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="147"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/SerializerString"><method name="&lt;init&gt;" desc="(Ljava/nio/charset/Charset;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Ljava/lang/String;)[B" line="16"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="([B)Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="69"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/Options$BuilderObservable"><method name="&lt;init&gt;" desc="()V" line="159"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pageSizeBytes" desc="(I)Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderObservable;" line="176"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduler" desc="(Lio/reactivex/Scheduler;)Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderObservable;" line="189"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fileFactory" desc="(Ljava/util/concurrent/Callable;)Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderObservable;" line="203"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializerJavaIO" desc="()Lio/reactivex/functions/Function;" line="221"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializerBytes" desc="()Lio/reactivex/functions/Function;" line="232"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializerUtf8" desc="()Lio/reactivex/functions/Function;" line="236"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="serializer" desc="(Lcom/github/davidmoten/rx2/buffertofile/Serializer;)Lio/reactivex/functions/Function;" line="240"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Lcom/github/davidmoten/rx2/buffertofile/DataSerializer;)Lio/reactivex/functions/Function;" line="251"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="172" covered="160"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/Options$BuilderFlowable"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pageSizeBytes" desc="(I)Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderFlowable;" line="78"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduler" desc="(Lio/reactivex/Scheduler;)Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderFlowable;" line="91"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileFactory" desc="(Ljava/util/concurrent/Callable;)Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderFlowable;" line="105"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializerJavaIO" desc="()Lio/reactivex/FlowableTransformer;" line="123"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializerBytes" desc="()Lio/reactivex/FlowableTransformer;" line="134"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializerUtf8" desc="()Lio/reactivex/FlowableTransformer;" line="138"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Lcom/github/davidmoten/rx2/buffertofile/Serializer;)Lio/reactivex/FlowableTransformer;" line="142"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializer" desc="(Lcom/github/davidmoten/rx2/buffertofile/DataSerializer;)Lio/reactivex/FlowableTransformer;" line="153"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="124" covered="208"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/Options$BuilderObservable$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderObservable;Lcom/github/davidmoten/rx2/buffertofile/Options;Lcom/github/davidmoten/rx2/buffertofile/Serializer;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Observable;)Lio/reactivex/Flowable;" line="245"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/Options$FileFactoryHolder$1"><method name="&lt;init&gt;" desc="()V" line="257"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/io/File;" line="261"><counter type="INSTRUCTION" missed="20" covered="13"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="72" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/buffertofile/Options$FileFactoryHolder"><method name="&lt;init&gt;" desc="()V" line="256"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="257"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SerializerString.java"><line nr="10" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="10" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="12" mb="0" cb="0"/><line nr="21" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="69"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Serializers.java"><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="11" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="0" ci="12" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="20" mb="0" cb="2"/><line nr="58" mi="0" ci="15" mb="0" cb="0"/><line nr="60" mi="0" ci="20" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="0"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="193" covered="318"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Options.java"><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="10" ci="24" mb="1" cb="1"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="11" mb="0" cb="0"/><line nr="134" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="17" mb="0" cb="0"/><line nr="143" mi="0" ci="33" mb="0" cb="0"/><line nr="147" mi="0" ci="17" mb="0" cb="0"/><line nr="153" mi="0" ci="12" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="160" mi="0" ci="10" mb="0" cb="0"/><line nr="161" mi="0" ci="10" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="176" mi="0" ci="10" mb="0" cb="0"/><line nr="177" mi="0" ci="9" mb="0" cb="0"/><line nr="189" mi="10" ci="0" mb="0" cb="0"/><line nr="190" mi="9" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="10" mb="0" cb="0"/><line nr="204" mi="0" ci="9" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="232" mi="0" ci="11" mb="0" cb="0"/><line nr="236" mi="11" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="17" mb="0" cb="0"/><line nr="241" mi="0" ci="33" mb="0" cb="0"/><line nr="245" mi="0" ci="17" mb="0" cb="0"/><line nr="251" mi="12" ci="0" mb="0" cb="0"/><line nr="256" mi="10" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="22" mb="0" cb="0"/><line nr="261" mi="0" ci="11" mb="0" cb="0"/><line nr="262" mi="8" ci="0" mb="0" cb="0"/><line nr="263" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="609" covered="691"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="7" covered="47"/><counter type="COMPLEXITY" missed="31" covered="43"/><counter type="METHOD" missed="25" covered="41"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><counter type="INSTRUCTION" missed="866" covered="1078"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="7" covered="76"/><counter type="COMPLEXITY" missed="42" covered="63"/><counter type="METHOD" missed="34" covered="59"/><counter type="CLASS" missed="0" covered="10"/></package><package name="com/github/davidmoten/rx2/flowable"><class name="com/github/davidmoten/rx2/flowable/Serialized"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/ObjectInputStream;)Lio/reactivex/Flowable;" line="52"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/File;I)Lio/reactivex/Flowable;" line="86"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/io/File;)Lio/reactivex/Flowable;" line="123"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lio/reactivex/Flowable;Ljava/io/ObjectOutputStream;)Lio/reactivex/Flowable;" line="139"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lio/reactivex/Flowable;Ljava/io/File;ZI)Lio/reactivex/Flowable;" line="167"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lio/reactivex/Flowable;Ljava/io/File;Z)Lio/reactivex/Flowable;" line="201"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lio/reactivex/Flowable;Ljava/io/File;)Lio/reactivex/Flowable;" line="217"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="kryo" desc="()Lcom/github/davidmoten/rx2/flowable/Serialized$KryoBuilder;" line="221"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="kryo" desc="(Lcom/esotericsoftware/kryo/Kryo;)Lcom/github/davidmoten/rx2/flowable/Serialized$KryoBuilder;" line="225"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="140" covered="221"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$ObjectInputStreamFlowableFactoryHolder"><method name="&lt;init&gt;" desc="()V" line="99"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="100"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Burst"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="42" covered="124"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="item" desc="(Ljava/lang/Object;)Lcom/github/davidmoten/rx2/flowable/Burst$Builder;" line="103"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="items" desc="([Ljava/lang/Object;)Lcom/github/davidmoten/rx2/flowable/Burst$Builder;" line="107"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="120" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="181" covered="193"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$KryoBuilder$2$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/flowable/Serialized$KryoBuilder$2;Lcom/esotericsoftware/kryo/io/Output;)V" line="258"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="261"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$4"><method name="&lt;init&gt;" desc="(Ljava/io/File;ZI)V" line="167"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/io/ObjectOutputStream;" line="170"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$5"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/io/ObjectOutputStream;)Lio/reactivex/Flowable;" line="177"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$2"><method name="&lt;init&gt;" desc="(Ljava/io/File;I)V" line="86"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/io/ObjectInputStream;" line="89"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="51"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$3"><method name="&lt;init&gt;" desc="(Ljava/io/ObjectOutputStream;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/Serializable;)V" line="143"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$1"><method name="&lt;init&gt;" desc="(Ljava/io/ObjectInputStream;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lio/reactivex/Emitter;)V" line="57"><counter type="INSTRUCTION" missed="44" covered="65"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="150" covered="90"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$ObjectInputStreamFlowableFactoryHolder$1"><method name="&lt;init&gt;" desc="()V" line="100"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/io/ObjectInputStream;)Lio/reactivex/Flowable;" line="104"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Burst$Builder"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/Throwable;)Lio/reactivex/Flowable;" line="120"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lio/reactivex/Flowable;" line="125"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="79"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$KryoBuilder"><method name="&lt;init&gt;" desc="(Lcom/esotericsoftware/kryo/Kryo;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lio/reactivex/Flowable;Ljava/io/File;)Lio/reactivex/Flowable;" line="239"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lio/reactivex/Flowable;Ljava/io/File;Z)Lio/reactivex/Flowable;" line="243"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Lio/reactivex/Flowable;Ljava/io/File;ZI)Lio/reactivex/Flowable;" line="248"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/lang/Class;Ljava/io/File;)Lio/reactivex/Flowable;" line="271"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/lang/Class;Ljava/io/File;I)Lio/reactivex/Flowable;" line="275"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/lang/Class;Lcom/esotericsoftware/kryo/io/Input;)Lio/reactivex/Flowable;" line="294"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="140" covered="190"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Burst$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/flowable/Burst;Lorg/reactivestreams/Subscriber;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="66"><counter type="INSTRUCTION" missed="34" covered="274"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="169" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="222" covered="349"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="10" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$KryoBuilder$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/flowable/Serialized$KryoBuilder;Ljava/io/File;ZI)V" line="248"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lcom/esotericsoftware/kryo/io/Output;" line="251"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$KryoBuilder$3"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/flowable/Serialized$KryoBuilder;Ljava/io/File;I)V" line="275"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lcom/esotericsoftware/kryo/io/Input;" line="278"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="51"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$KryoBuilder$2"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/flowable/Serialized$KryoBuilder;Lio/reactivex/Flowable;)V" line="254"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/esotericsoftware/kryo/io/Output;)Lio/reactivex/Flowable;" line="258"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$KryoBuilder$5"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/flowable/Serialized$KryoBuilder;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)V" line="294"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lio/reactivex/Emitter;)V" line="298"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="108"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/flowable/Serialized$KryoBuilder$4"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/flowable/Serialized$KryoBuilder;Ljava/lang/Class;)V" line="281"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/esotericsoftware/kryo/io/Input;)Lio/reactivex/Flowable;" line="285"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Burst.java"><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="9" ci="12" mb="1" cb="1"/><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="36" mb="0" cb="2"/><line nr="48" mi="9" ci="11" mb="1" cb="1"/><line nr="49" mi="12" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="17" mb="0" cb="0"/><line nr="52" mi="0" ci="19" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="29" mb="0" cb="0"/><line nr="60" mi="0" ci="15" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="0"/><line nr="66" mi="9" ci="12" mb="1" cb="1"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="30" mb="1" cb="1"/><line nr="73" mi="0" ci="25" mb="1" cb="1"/><line nr="74" mi="9" ci="13" mb="1" cb="1"/><line nr="75" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="48" mb="1" cb="3"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="31" mb="1" cb="1"/><line nr="83" mi="0" ci="22" mb="0" cb="2"/><line nr="84" mi="0" ci="14" mb="0" cb="0"/><line nr="86" mi="0" ci="19" mb="0" cb="0"/><line nr="91" mi="0" ci="17" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="15" mb="0" cb="0"/><line nr="107" mi="0" ci="14" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="0"/><line nr="121" mi="0" ci="10" mb="0" cb="0"/><line nr="125" mi="0" ci="16" mb="0" cb="0"/><counter type="INSTRUCTION" missed="467" covered="621"/><counter type="BRANCH" missed="10" covered="18"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="19" covered="20"/><counter type="METHOD" missed="9" covered="16"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Serialized.java"><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="26" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="10" ci="0" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="16" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="29" mb="0" cb="0"/><line nr="89" mi="0" ci="21" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="13" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="22" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="123" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="27" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="167" mi="0" ci="33" mb="0" cb="0"/><line nr="170" mi="0" ci="23" mb="0" cb="0"/><line nr="173" mi="0" ci="25" mb="0" cb="0"/><line nr="177" mi="0" ci="12" mb="0" cb="0"/><line nr="180" mi="0" ci="9" mb="0" cb="0"/><line nr="181" mi="0" ci="13" mb="0" cb="0"/><line nr="201" mi="13" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="13" mb="0" cb="0"/><line nr="221" mi="0" ci="12" mb="0" cb="0"/><line nr="225" mi="0" ci="13" mb="0" cb="0"/><line nr="234" mi="0" ci="9" mb="0" cb="0"/><line nr="235" mi="0" ci="10" mb="0" cb="0"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="239" mi="0" ci="14" mb="0" cb="0"/><line nr="243" mi="14" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="37" mb="0" cb="0"/><line nr="251" mi="0" ci="20" mb="0" cb="0"/><line nr="254" mi="0" ci="29" mb="0" cb="0"/><line nr="258" mi="0" ci="32" mb="0" cb="0"/><line nr="261" mi="0" ci="15" mb="0" cb="0"/><line nr="262" mi="0" ci="8" mb="0" cb="0"/><line nr="266" mi="0" ci="9" mb="0" cb="0"/><line nr="267" mi="0" ci="13" mb="0" cb="0"/><line nr="271" mi="0" ci="13" mb="0" cb="0"/><line nr="275" mi="0" ci="33" mb="0" cb="0"/><line nr="278" mi="0" ci="18" mb="0" cb="0"/><line nr="281" mi="0" ci="29" mb="0" cb="0"/><line nr="285" mi="0" ci="14" mb="0" cb="0"/><line nr="288" mi="0" ci="9" mb="0" cb="0"/><line nr="289" mi="0" ci="13" mb="0" cb="0"/><line nr="294" mi="0" ci="34" mb="0" cb="0"/><line nr="298" mi="0" ci="22" mb="0" cb="2"/><line nr="299" mi="0" ci="10" mb="0" cb="0"/><line nr="301" mi="0" ci="25" mb="0" cb="0"/><line nr="302" mi="0" ci="10" mb="0" cb="0"/><line nr="304" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="951" covered="1108"/><counter type="BRANCH" missed="13" covered="19"/><counter type="LINE" missed="7" covered="54"/><counter type="COMPLEXITY" missed="61" covered="72"/><counter type="METHOD" missed="48" covered="69"/><counter type="CLASS" missed="0" covered="15"/></sourcefile><counter type="INSTRUCTION" missed="1418" covered="1729"/><counter type="BRANCH" missed="23" covered="37"/><counter type="LINE" missed="11" covered="90"/><counter type="COMPLEXITY" missed="80" covered="92"/><counter type="METHOD" missed="57" covered="85"/><counter type="CLASS" missed="0" covered="18"/></package><package name="com/github/davidmoten/rx2"><class name="com/github/davidmoten/rx2/Strings$SplitLinesHolder$1"><method name="&lt;init&gt;" desc="()V" line="268"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/String;)Ljava/lang/String;" line="271"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$SplitLinesHolder$2"><method name="&lt;init&gt;" desc="()V" line="274"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/String;)Z" line="277"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="58"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$BosCollectorHolder$1"><method name="&lt;init&gt;" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/ByteArrayOutputStream;[B)V" line="167"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Callables"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constant" desc="(Ljava/lang/Object;)Ljava/util/concurrent/Callable;" line="12"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toNull" desc="()Ljava/util/concurrent/Callable;" line="23"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/SchedulerHelper$1"><method name="&lt;init&gt;" desc="(Lio/reactivex/Scheduler$Worker;Ljava/util/concurrent/CountDownLatch;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$5"><method name="&lt;init&gt;" desc="(Lio/reactivex/Scheduler;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/github/davidmoten/rx2/RetryWhen$ErrorAndDuration;)Lio/reactivex/Flowable;" line="131"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="101"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$4"><method name="&lt;init&gt;" desc="()V" line="120"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Throwable;Ljava/lang/Long;)Lcom/github/davidmoten/rx2/RetryWhen$ErrorAndDuration;" line="123"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$BosCreatorHolder$1"><method name="&lt;init&gt;" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/io/ByteArrayOutputStream;" line="157"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$3"><method name="&lt;init&gt;" desc="(Lio/reactivex/functions/Predicate;Ljava/util/List;Ljava/util/List;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/github/davidmoten/rx2/RetryWhen$ErrorAndDuration;)Lio/reactivex/Flowable;" line="101"><counter type="INSTRUCTION" missed="17" covered="260"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="159" covered="291"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$2"><method name="&lt;init&gt;" desc="(Lio/reactivex/functions/Consumer;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lcom/github/davidmoten/rx2/RetryWhen$ErrorAndDuration;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="78"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$Builder$ToLongHolder"><method name="&lt;init&gt;" desc="()V" line="221"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="222"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/rx2/RetryWhen$1"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Consumer;Lio/reactivex/Scheduler;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;" line="67"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="99"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stateMachine" desc="(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function3;Lio/reactivex/functions/BiPredicate;Lio/reactivex/BackpressureStrategy;I)Lio/reactivex/FlowableTransformer;" line="45"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stateMachine" desc="()Lcom/github/davidmoten/rx2/StateMachine$Builder;" line="50"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stateMachine2" desc="()Lcom/github/davidmoten/rx2/StateMachine2$Builder;" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doOnEmpty" desc="(Lio/reactivex/functions/Action;)Lio/reactivex/FlowableTransformer;" line="58"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="()Lio/reactivex/FlowableTransformer;" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapLast" desc="(Lio/reactivex/functions/Function;)Lio/reactivex/FlowableTransformer;" line="86"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lio/reactivex/Flowable;Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;I)Lio/reactivex/Flowable;" line="100"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchWith" desc="(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;I)Lio/reactivex/FlowableTransformer;" line="106"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchWith" desc="(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/FlowableTransformer;" line="118"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onBackpressureBufferToFile" desc="()Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderFlowable;" line="122"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectStats" desc="()Lio/reactivex/FlowableTransformer;" line="127"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectStats" desc="(Lio/reactivex/functions/Function;)Lio/reactivex/FlowableTransformer;" line="142"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectWhile" desc="(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/BiPredicate;Z)Lio/reactivex/FlowableTransformer;" line="161"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectWhile" desc="(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/BiPredicate;)Lio/reactivex/FlowableTransformer;" line="174"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toListWhile" desc="(Lio/reactivex/functions/BiPredicate;Z)Lio/reactivex/FlowableTransformer;" line="179"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toListWhile" desc="(Lio/reactivex/functions/BiPredicate;)Lio/reactivex/FlowableTransformer;" line="185"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="windowMax" desc="(I)Lio/reactivex/FlowableTransformer;" line="221"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="windowMax" desc="(ILjava/util/Comparator;)Lio/reactivex/FlowableTransformer;" line="226"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="windowMin" desc="(I)Lio/reactivex/FlowableTransformer;" line="236"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="windowMin" desc="(ILjava/util/Comparator;)Lio/reactivex/FlowableTransformer;" line="241"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="naturalComparator" desc="()Ljava/util/Comparator;" line="261"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxRequest" desc="(J)Lio/reactivex/FlowableTransformer;" line="265"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minRequest" desc="(IZ)Lio/reactivex/FlowableTransformer;" line="276"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minRequest" desc="(I)Lio/reactivex/FlowableTransformer;" line="286"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rebatchRequests" desc="(IJZ)Lio/reactivex/FlowableTransformer;" line="291"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rebatchRequests" desc="(IJ)Lio/reactivex/FlowableTransformer;" line="310"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="182" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="234" covered="424"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="5" covered="29"/><counter type="METHOD" missed="5" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$BosCreatorHolder"><method name="&lt;init&gt;" desc="()V" line="152"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$Builder"><method name="&lt;init&gt;" desc="()V" line="188"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retryWhenInstanceOf" desc="([Ljava/lang/Class;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="202"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="failWhenInstanceOf" desc="([Ljava/lang/Class;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="207"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retryIf" desc="(Lio/reactivex/functions/Predicate;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="212"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delays" desc="(Lio/reactivex/Flowable;Ljava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="217"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delaysInt" desc="(Lio/reactivex/Flowable;Ljava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="235"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delay" desc="(Ljava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="239"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toMillis" desc="(Ljava/util/concurrent/TimeUnit;)Lio/reactivex/functions/Function;" line="244"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxRetries" desc="(I)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="254"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduler" desc="(Lio/reactivex/Scheduler;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="259"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="action" desc="(Lio/reactivex/functions/Consumer;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="264"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exponentialBackoff" desc="(JJLjava/util/concurrent/TimeUnit;D)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="271"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exponentialBackoff" desc="(JLjava/util/concurrent/TimeUnit;D)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="289"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exponentialBackoff" desc="(JLjava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="293"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/reactivex/functions/Function;" line="297"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="230" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="289" covered="437"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="33"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="5" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$7$3"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/Strings$7;)V" line="208"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;)V" line="212"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="105"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$7$2"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/Strings$7;)V" line="203"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/StringBuilder;" line="206"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Predicates"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alwaysFalse" desc="()Lio/reactivex/functions/Predicate;" line="13"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alwaysTrue" desc="()Lio/reactivex/functions/Predicate;" line="27"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$7$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/Strings$7;)V" line="219"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/StringBuilder;)Lio/reactivex/Maybe;" line="223"><counter type="INSTRUCTION" missed="18" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="61"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine$1"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/rx2/Bytes$BosToArrayHolder$1"><method name="&lt;init&gt;" desc="()V" line="173"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/io/ByteArrayOutputStream;)[B" line="176"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$10"><method name="&lt;init&gt;" desc="(IJZ)V" line="293"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="297"><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="133"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$NaturalComparatorHolder$1"><method name="&lt;init&gt;" desc="()V" line="250"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Comparable;Ljava/lang/Comparable;)I" line="254"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Flowables"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lio/reactivex/Flowable;Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;I)Lio/reactivex/Flowable;" line="21"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lio/reactivex/Flowable;Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)Lio/reactivex/Flowable;" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Object;)Lio/reactivex/Flowable;" line="30"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Object;J)Lio/reactivex/Flowable;" line="34"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fetchPagesByRequest" desc="(Lio/reactivex/functions/BiFunction;JI)Lio/reactivex/Flowable;" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fetchPagesByRequest" desc="(Lio/reactivex/functions/BiFunction;J)Lio/reactivex/Flowable;" line="44"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fetchPagesByRequest" desc="(Lio/reactivex/functions/BiFunction;)Lio/reactivex/Flowable;" line="48"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="145"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Actions$DoNothingHolder$1"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Predicates$FalseHolder"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$DisposeActionHolder"><method name="&lt;init&gt;" desc="()V" line="258"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="259"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Predicates$TrueHolder$1"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Maybes"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromNullable" desc="(Ljava/lang/Object;)Lio/reactivex/Maybe;" line="12"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="80"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$CloseHolder$1"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/Closeable;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$ListFactoryHolder$2"><method name="&lt;init&gt;" desc="()V" line="198"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;" line="202"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$ListFactoryHolder$1"><method name="&lt;init&gt;" desc="()V" line="190"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/util/List;" line="194"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$2"><method name="&lt;init&gt;" desc="(Lio/reactivex/functions/Function;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="90"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$1"><method name="&lt;init&gt;" desc="(Lio/reactivex/functions/Action;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="62"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$4"><method name="&lt;init&gt;" desc="(Lio/reactivex/functions/Function;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;" line="146"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="60"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$3"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="110"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="54"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/IO$1"><method name="&lt;init&gt;" desc="(I)V" line="23"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/net/ServerSocket;" line="26"><counter type="INSTRUCTION" missed="13" covered="2"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="53" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/IO$2"><method name="&lt;init&gt;" desc="(Lio/reactivex/functions/Consumer;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/net/ServerSocket;" line="36"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine2$Builder3$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/StateMachine2$Builder3;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="93"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="71"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Predicates$FalseHolder$1"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Statistics"><method name="&lt;init&gt;" desc="(JDD)V" line="9"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lcom/github/davidmoten/rx2/Statistics;" line="16"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Number;)Lcom/github/davidmoten/rx2/Statistics;" line="20"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count" desc="()J" line="25"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sum" desc="()D" line="29"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumSquares" desc="()D" line="33"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mean" desc="()D" line="37"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sd" desc="()D" line="41"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="149"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="165" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="184" covered="345"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine$CompletionAlwaysTrueHolder"><method name="&lt;init&gt;" desc="()V" line="136"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lcom/github/davidmoten/rx2/StateMachine$Completion;" line="149"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="140"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$NaturalComparatorHolder"><method name="&lt;init&gt;" desc="()V" line="249"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="250"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$6"><method name="&lt;init&gt;" desc="(ILjava/util/Comparator;)V" line="226"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;" line="229"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="47"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$5"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/BiPredicate;Z)V" line="161"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="165"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiPredicates$1"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="19"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$8"><method name="&lt;init&gt;" desc="(J)V" line="265"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="269"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiPredicates$2"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$7"><method name="&lt;init&gt;" desc="(ILjava/util/Comparator;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;" line="244"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="47"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiPredicates$3"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$Builder$2"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/RetryWhen$Builder;DLjava/util/concurrent/TimeUnit;JJ)V" line="273"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Integer;)Ljava/lang/Long;" line="276"><counter type="INSTRUCTION" missed="34" covered="59"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="103" covered="96"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$9"><method name="&lt;init&gt;" desc="(IZ)V" line="276"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="280"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$Builder$1"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/TimeUnit;)V" line="244"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Long;)Ljava/lang/Long;" line="248"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Actions$DoNothingHolder"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/ObservableTransformers"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onBackpressureBufferToFile" desc="()Lcom/github/davidmoten/rx2/buffertofile/Options$BuilderObservable;" line="12"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine2$Builder"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialStateFactory" desc="(Ljava/util/concurrent/Callable;)Lcom/github/davidmoten/rx2/StateMachine2$Builder2;" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialState" desc="(Ljava/lang/Object;)Lcom/github/davidmoten/rx2/StateMachine2$Builder2;" line="33"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$PrintlnHolder$1"><method name="&lt;init&gt;" desc="()V" line="138"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine2$Builder3"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lcom/github/davidmoten/rx2/StateMachine$Transition2;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completion" desc="(Lcom/github/davidmoten/rx2/StateMachine$Completion2;)Lcom/github/davidmoten/rx2/StateMachine2$Builder3;" line="69"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errored" desc="(Lcom/github/davidmoten/rx2/StateMachine$Errored;)Lcom/github/davidmoten/rx2/StateMachine2$Builder3;" line="74"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backpressureStrategy" desc="(Lio/reactivex/BackpressureStrategy;)Lcom/github/davidmoten/rx2/StateMachine2$Builder3;" line="79"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requestBatchSize" desc="(I)Lcom/github/davidmoten/rx2/StateMachine2$Builder3;" line="84"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/reactivex/FlowableTransformer;" line="89"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="187" covered="166"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine2$Builder2"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transition" desc="(Lcom/github/davidmoten/rx2/StateMachine$Transition2;)Lcom/github/davidmoten/rx2/StateMachine2$Builder3;" line="47"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$InputStreamCloseHolder$1"><method name="&lt;init&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/InputStream;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/RetryWhen$ErrorAndDuration"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;J)V" line="312"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwable" desc="()Ljava/lang/Throwable;" line="318"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="durationMs" desc="()J" line="322"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="73"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine$Builder"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialStateFactory" desc="(Ljava/util/concurrent/Callable;)Lcom/github/davidmoten/rx2/StateMachine$Builder2;" line="73"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialState" desc="(Ljava/lang/Object;)Lcom/github/davidmoten/rx2/StateMachine$Builder2;" line="77"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="58"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$CollectStatsHolder"><method name="&lt;init&gt;" desc="()V" line="130"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="131"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$DoNothingHolder$1"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Predicates$TrueHolder"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiFunctions$ThrowingHolder$1"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiFunctions$ThrowingHolder"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Functions"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constant" desc="(Ljava/lang/Object;)Lio/reactivex/functions/Function;" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Lio/reactivex/functions/Function;" line="25"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwing" desc="()Lio/reactivex/functions/Function;" line="40"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine2"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lcom/github/davidmoten/rx2/StateMachine2$Builder;" line="19"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$SplitLinesHolder"><method name="&lt;init&gt;" desc="()V" line="267"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="268"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$12"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="362"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="366"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$11"><method name="&lt;init&gt;" desc="()V" line="324"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="328"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$10"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Maybe;" line="305"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiPredicates"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alwaysTrue" desc="()Lio/reactivex/functions/BiPredicate;" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="alwaysFalse" desc="()Lio/reactivex/functions/BiPredicate;" line="26"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwing" desc="()Lio/reactivex/functions/BiPredicate;" line="37"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$ZipHolder"><method name="&lt;init&gt;" desc="()V" line="181"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="182"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine2$1"><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/rx2/RetryWhen$Builder$ToLongHolder$1"><method name="&lt;init&gt;" desc="()V" line="222"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Integer;)Ljava/lang/Long;" line="225"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="130" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/rx2/RetryWhen"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notificationHandler" desc="(Lio/reactivex/Flowable;Lio/reactivex/Scheduler;Lio/reactivex/functions/Consumer;Ljava/util/List;Ljava/util/List;Lio/reactivex/functions/Predicate;)Lio/reactivex/functions/Function;" line="50"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNotificationHandler" desc="(Lio/reactivex/Flowable;Lio/reactivex/Scheduler;Lio/reactivex/functions/Consumer;Lio/reactivex/functions/Function;)Lio/reactivex/functions/Function;" line="59"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callActionExceptForLast" desc="(Lio/reactivex/functions/Consumer;)Lio/reactivex/functions/Consumer;" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExceptionChecker" desc="(Ljava/util/List;Ljava/util/List;Lio/reactivex/functions/Predicate;)Lio/reactivex/functions/Function;" line="97"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delay" desc="(Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function;" line="128"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="retryWhenInstanceOf" desc="([Ljava/lang/Class;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="143"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="failWhenInstanceOf" desc="([Ljava/lang/Class;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="147"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retryIf" desc="(Lio/reactivex/functions/Predicate;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="151"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delays" desc="(Lio/reactivex/Flowable;Ljava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="155"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delaysInt" desc="(Lio/reactivex/Flowable;Ljava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="159"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delay" desc="(JLjava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="163"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxRetries" desc="(I)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="167"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduler" desc="(Lio/reactivex/Scheduler;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="171"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="action" desc="(Lio/reactivex/functions/Consumer;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="175"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exponentialBackoff" desc="(JLjava/util/concurrent/TimeUnit;D)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="179"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exponentialBackoff" desc="(JLjava/util/concurrent/TimeUnit;)Lcom/github/davidmoten/rx2/RetryWhen$Builder;" line="183"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="120"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="324" covered="171"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="12" covered="11"/><counter type="METHOD" missed="12" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$ListFactoryHolder"><method name="&lt;init&gt;" desc="()V" line="188"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="factory" desc="()Ljava/util/concurrent/Callable;" line="209"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="()Lio/reactivex/functions/BiFunction;" line="214"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="190"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$ReverseHolder$1"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lorg/reactivestreams/Publisher;" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trim" desc="()Lio/reactivex/functions/Function;" line="67"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/Reader;I)Lio/reactivex/Flowable;" line="71"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/Reader;)Lio/reactivex/Flowable;" line="87"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/InputStream;)Lio/reactivex/Flowable;" line="91"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lio/reactivex/Flowable;" line="95"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;I)Lio/reactivex/Flowable;" line="99"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lio/reactivex/Flowable;Ljava/lang/String;)Lio/reactivex/Flowable;" line="103"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Maybe;" line="107"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="(Lio/reactivex/Flowable;Ljava/lang/String;)Lio/reactivex/Maybe;" line="111"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strings" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;" line="115"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/File;)Lio/reactivex/Flowable;" line="124"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)Lio/reactivex/Flowable;" line="128"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClasspath" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/nio/charset/Charset;)Lio/reactivex/Flowable;" line="140"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClasspath" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Lio/reactivex/Flowable;" line="152"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClasspath" desc="(Ljava/lang/String;)Lio/reactivex/Flowable;" line="156"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/util/concurrent/Callable;)Lio/reactivex/Flowable;" line="160"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="join" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Maybe;" line="170"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Ljava/nio/charset/CharsetDecoder;)Lio/reactivex/FlowableTransformer;" line="174"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Ljava/nio/charset/CharsetDecoder;Lio/reactivex/BackpressureStrategy;I)Lio/reactivex/FlowableTransformer;" line="179"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Lio/reactivex/Flowable;Ljava/nio/charset/CharsetDecoder;)Lio/reactivex/Flowable;" line="183"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Lio/reactivex/Flowable;Ljava/nio/charset/Charset;)Lio/reactivex/Flowable;" line="187"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Lio/reactivex/Flowable;Ljava/lang/String;)Lio/reactivex/Flowable;" line="192"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="join" desc="(Lio/reactivex/Flowable;Ljava/lang/String;)Lio/reactivex/Maybe;" line="197"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitLinesSkipComments" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;Ljava/lang/String;Ljava/lang/String;)Lio/reactivex/Flowable;" line="236"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Ljava/lang/String;)Lio/reactivex/FlowableTransformer;" line="283"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Ljava/util/regex/Pattern;)Lio/reactivex/FlowableTransformer;" line="287"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Ljava/lang/String;Lio/reactivex/BackpressureStrategy;I)Lio/reactivex/FlowableTransformer;" line="292"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Ljava/util/regex/Pattern;Lio/reactivex/BackpressureStrategy;I)Lio/reactivex/FlowableTransformer;" line="297"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="join" desc="(Ljava/lang/String;)Lio/reactivex/functions/Function;" line="301"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="join" desc="()Lio/reactivex/functions/Function;" line="312"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="(Ljava/lang/String;)Lio/reactivex/functions/Function;" line="316"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concat" desc="()Lio/reactivex/functions/Function;" line="320"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strings" desc="()Lio/reactivex/FlowableTransformer;" line="324"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitSimple" desc="(Ljava/lang/String;)Lio/reactivex/FlowableTransformer;" line="362"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="321" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="340" covered="706"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="3" covered="38"/><counter type="METHOD" missed="3" covered="37"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$DisposeActionHolder$1"><method name="&lt;init&gt;" desc="()V" line="259"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/io/Reader;)V" line="262"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$InputStreamCloseHolder"><method name="&lt;init&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$ZipHolder$2"><method name="&lt;init&gt;" desc="()V" line="189"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/util/zip/ZipInputStream;)Lio/reactivex/Flowable;" line="192"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$ZipHolder$1"><method name="&lt;init&gt;" desc="()V" line="182"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/util/zip/ZipInputStream;)V" line="186"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Callables$1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Callables$2"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$CloseHolder"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$BosToArrayHolder"><method name="&lt;init&gt;" desc="()V" line="172"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="173"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Functions$IdentityHolder"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Functions$IdentityHolder$1"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$4"><method name="&lt;init&gt;" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/io/Reader;" line="133"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="48"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$3"><method name="&lt;init&gt;" desc="()V" line="115"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="118"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$6"><method name="&lt;init&gt;" desc="()V" line="160"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/io/Reader;)Lio/reactivex/Flowable;" line="163"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$5"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/String;Ljava/nio/charset/Charset;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/io/Reader;" line="145"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="51"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$2"><method name="&lt;init&gt;" desc="(ILjava/io/Reader;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lio/reactivex/Emitter;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="117"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$1"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="73"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiFunctions$3"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$8"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="246"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/String;)Ljava/util/List;" line="249"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$7"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Ljava/lang/String;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lio/reactivex/Maybe;" line="203"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="94"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiFunctions$1"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/github/davidmoten/rx2/Statistics;Ljava/lang/Number;)Lcom/github/davidmoten/rx2/Statistics;" line="33"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine$Builder3"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lcom/github/davidmoten/rx2/StateMachine$Transition;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completion" desc="(Lcom/github/davidmoten/rx2/StateMachine$Completion;)Lcom/github/davidmoten/rx2/StateMachine$Builder3;" line="112"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backpressureStrategy" desc="(Lio/reactivex/BackpressureStrategy;)Lcom/github/davidmoten/rx2/StateMachine$Builder3;" line="117"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestBatchSize" desc="(I)Lcom/github/davidmoten/rx2/StateMachine$Builder3;" line="122"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/reactivex/FlowableTransformer;" line="127"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="163"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiFunctions$2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Strings$9"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="238"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/String;)Z" line="241"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="63"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine$Builder2"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transition" desc="(Lcom/github/davidmoten/rx2/StateMachine$Transition;)Lcom/github/davidmoten/rx2/StateMachine$Builder3;" line="91"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="56"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$ReverseHolder"><method name="&lt;init&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$CollectStatsHolder$1"><method name="&lt;init&gt;" desc="()V" line="131"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;" line="135"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="36"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/InputStream;I)Lio/reactivex/Flowable;" line="43"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/File;)Lio/reactivex/Flowable;" line="60"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/File;I)Lio/reactivex/Flowable;" line="64"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/InputStream;)Lio/reactivex/Flowable;" line="101"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unzip" desc="(Ljava/io/File;)Lio/reactivex/Flowable;" line="105"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unzip" desc="(Ljava/io/InputStream;)Lio/reactivex/Flowable;" line="117"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unzip" desc="(Ljava/util/zip/ZipInputStream;)Lio/reactivex/Flowable;" line="122"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Single;" line="140"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collect" desc="()Lio/reactivex/functions/Function;" line="144"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="118" covered="223"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lcom/github/davidmoten/rx2/StateMachine$Builder;" line="63"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$PrintlnHolder"><method name="&lt;init&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="138"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/StateMachine$CompletionAlwaysTrueHolder$1"><method name="&lt;init&gt;" desc="()V" line="140"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;Lio/reactivex/FlowableEmitter;)Z" line="143"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Actions$2"><method name="&lt;init&gt;" desc="(Ljava/lang/Exception;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Actions$1"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/atomic/AtomicBoolean;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/FlowableTransformers$4$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/FlowableTransformers$4;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/github/davidmoten/rx2/util/Pair;Ljava/lang/Object;)Lcom/github/davidmoten/rx2/util/Pair;" line="151"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="47"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Actions"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setToTrue" desc="(Ljava/util/concurrent/atomic/AtomicBoolean;)Lio/reactivex/functions/Action;" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwing" desc="(Ljava/lang/Exception;)Lio/reactivex/functions/Action;" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doNothing" desc="()Lio/reactivex/functions/Action;" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/BiFunctions"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwing" desc="()Lio/reactivex/functions/BiFunction;" line="15"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectStats" desc="()Lio/reactivex/functions/BiFunction;" line="29"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constant" desc="(Ljava/lang/Object;)Lio/reactivex/functions/BiFunction;" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toNull" desc="()Lio/reactivex/functions/BiFunction;" line="51"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="84"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$BosCollectorHolder"><method name="&lt;init&gt;" desc="()V" line="162"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$10"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="163"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(J)V" line="166"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/github/davidmoten/rx2/Strings$Utf8Holder"><method name="&lt;init&gt;" desc="()V" line="254"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="255"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Functions$1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Functions$2"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/IO"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serverSocket" desc="(I)Lcom/github/davidmoten/rx2/IO$ServerSocketBuilder;" line="23"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serverSocketAutoAllocatePort" desc="(Lio/reactivex/functions/Consumer;)Lcom/github/davidmoten/rx2/IO$ServerSocketBuilder;" line="32"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serverSocket" desc="(Ljava/util/concurrent/Callable;)Lcom/github/davidmoten/rx2/IO$ServerSocketBuilder;" line="44"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="78"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLongTo" desc="(Ljava/util/List;)Lio/reactivex/functions/LongConsumer;" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()Lio/reactivex/functions/Consumer;" line="34"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="increment" desc="(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/reactivex/functions/Consumer;" line="48"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printStackTrace" desc="()Lio/reactivex/functions/Consumer;" line="58"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doNothing" desc="()Lio/reactivex/functions/Consumer;" line="68"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/util/concurrent/atomic/AtomicReference;)Lio/reactivex/functions/Consumer;" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/reactivex/functions/Consumer;" line="92"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decrement" desc="(Ljava/util/concurrent/atomic/AtomicInteger;)Lio/reactivex/functions/Consumer;" line="101"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setToTrue" desc="(Ljava/util/concurrent/atomic/AtomicBoolean;)Lio/reactivex/functions/Consumer;" line="113"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTo" desc="(Ljava/util/List;)Lio/reactivex/functions/Consumer;" line="123"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="println" desc="()Lio/reactivex/functions/Consumer;" line="134"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertBytesEquals" desc="([B)Lio/reactivex/functions/Consumer;" line="148"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printLong" desc="(Ljava/lang/String;)Lio/reactivex/functions/LongConsumer;" line="163"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="199"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="4" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/IO$ServerSocketBuilder"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readTimeoutMs" desc="(I)Lcom/github/davidmoten/rx2/IO$ServerSocketBuilder;" line="61"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bufferSize" desc="(I)Lcom/github/davidmoten/rx2/IO$ServerSocketBuilder;" line="66"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preAcceptAction" desc="(Lio/reactivex/functions/Action;)Lcom/github/davidmoten/rx2/IO$ServerSocketBuilder;" line="71"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acceptTimeoutMs" desc="(I)Lcom/github/davidmoten/rx2/IO$ServerSocketBuilder;" line="76"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="acceptSocketIf" desc="(Lio/reactivex/functions/Predicate;)Lcom/github/davidmoten/rx2/IO$ServerSocketBuilder;" line="81"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="()Lio/reactivex/Flowable;" line="86"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="117" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="157" covered="196"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/SchedulerHelper"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withThreadIdFromCallSite" desc="(Lio/reactivex/Scheduler;)Lio/reactivex/Scheduler;" line="18"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withThreadId" desc="(Lio/reactivex/Scheduler;Ljava/lang/String;)Lio/reactivex/Scheduler;" line="22"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeCallSite" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockUntilWorkFinished" desc="(Lio/reactivex/Scheduler;IJLjava/util/concurrent/TimeUnit;)V" line="32"><counter type="INSTRUCTION" missed="41" covered="129"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockUntilWorkFinished" desc="(Lio/reactivex/Scheduler;I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="199" covered="262"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$1"><method name="&lt;init&gt;" desc="(ILjava/io/InputStream;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lio/reactivex/Emitter;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="127"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="92" covered="155"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$5"><method name="&lt;init&gt;" desc="(Ljava/util/zip/ZipInputStream;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lio/reactivex/Emitter;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="110"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$4"><method name="&lt;init&gt;" desc="(Ljava/io/File;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/util/zip/ZipInputStream;" line="108"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="43"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$3"><method name="&lt;init&gt;" desc="(I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/io/InputStream;)Lio/reactivex/Flowable;" line="75"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$2"><method name="&lt;init&gt;" desc="(Ljava/io/File;I)V" line="64"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/io/InputStream;" line="68"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="48"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$DoNothingHolder"><method name="&lt;init&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Bytes$6"><method name="&lt;init&gt;" desc="()V" line="144"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Single;" line="147"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$3"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Throwable;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$2"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/atomic/AtomicInteger;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$1"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(J)V" line="26"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="48"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$7"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/atomic/AtomicBoolean;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$6"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/atomic/AtomicInteger;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$5"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/atomic/AtomicInteger;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Integer;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="47"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$4"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/atomic/AtomicReference;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$9"><method name="&lt;init&gt;" desc="([B)V" line="148"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="([B)V" line="152"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="100"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/Consumers$8"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="47"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StateMachine2.java"><line nr="16" mi="10" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="12" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="13" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="15" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="80" mi="9" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="25" mb="0" cb="0"/><line nr="93" mi="0" ci="29" mb="0" cb="0"/><line nr="94" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="410" covered="376"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="25" covered="25"/><counter type="METHOD" missed="21" covered="23"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="Actions.java"><line nr="9" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="25" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="25" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="22" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="206" covered="209"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="20" covered="21"/><counter type="METHOD" missed="16" covered="20"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="Strings.java"><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="22" mb="0" cb="0"/><line nr="58" mi="0" ci="20" mb="0" cb="2"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="20" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="29" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="76" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="21" mb="0" cb="2"/><line nr="78" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="23" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="91" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="12" mb="0" cb="0"/><line nr="99" mi="0" ci="15" mb="0" cb="0"/><line nr="103" mi="0" ci="14" mb="0" cb="0"/><line nr="107" mi="0" ci="11" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="0"/><line nr="115" mi="0" ci="23" mb="0" cb="0"/><line nr="118" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="0" ci="11" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="130" mi="0" ci="29" mb="0" cb="0"/><line nr="133" mi="0" ci="18" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="140" mi="0" ci="9" mb="0" cb="0"/><line nr="141" mi="0" ci="9" mb="0" cb="0"/><line nr="142" mi="0" ci="33" mb="0" cb="0"/><line nr="145" mi="0" ci="18" mb="0" cb="0"/><line nr="148" mi="0" ci="10" mb="0" cb="0"/><line nr="152" mi="0" ci="12" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="0"/><line nr="160" mi="0" ci="21" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="166" mi="0" ci="13" mb="0" cb="0"/><line nr="170" mi="0" ci="11" mb="0" cb="0"/><line nr="174" mi="0" ci="12" mb="0" cb="0"/><line nr="179" mi="0" ci="12" mb="0" cb="0"/><line nr="183" mi="0" ci="12" mb="0" cb="0"/><line nr="187" mi="0" ci="22" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="12" mb="0" cb="0"/><line nr="197" mi="0" ci="29" mb="0" cb="0"/><line nr="198" mi="0" ci="13" mb="0" cb="0"/><line nr="199" mi="0" ci="14" mb="0" cb="0"/><line nr="203" mi="0" ci="43" mb="0" cb="0"/><line nr="206" mi="0" ci="11" mb="0" cb="0"/><line nr="208" mi="0" ci="13" mb="0" cb="0"/><line nr="212" mi="0" ci="25" mb="0" cb="2"/><line nr="213" mi="0" ci="13" mb="0" cb="0"/><line nr="215" mi="0" ci="20" mb="0" cb="0"/><line nr="216" mi="0" ci="12" mb="0" cb="0"/><line nr="218" mi="0" ci="8" mb="0" cb="0"/><line nr="219" mi="0" ci="21" mb="0" cb="0"/><line nr="223" mi="9" ci="14" mb="1" cb="1"/><line nr="224" mi="9" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="20" mb="0" cb="0"/><line nr="236" mi="0" ci="21" mb="0" cb="0"/><line nr="237" mi="0" ci="13" mb="0" cb="0"/><line nr="238" mi="0" ci="22" mb="0" cb="0"/><line nr="241" mi="0" ci="36" mb="0" cb="2"/><line nr="244" mi="0" ci="9" mb="0" cb="0"/><line nr="245" mi="0" ci="12" mb="0" cb="0"/><line nr="246" mi="0" ci="21" mb="0" cb="0"/><line nr="249" mi="0" ci="13" mb="0" cb="0"/><line nr="254" mi="10" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="11" mb="0" cb="0"/><line nr="258" mi="10" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="22" mb="0" cb="0"/><line nr="262" mi="0" ci="9" mb="0" cb="0"/><line nr="263" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="10" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="21" mb="0" cb="0"/><line nr="271" mi="0" ci="10" mb="0" cb="0"/><line nr="274" mi="0" ci="22" mb="0" cb="0"/><line nr="277" mi="0" ci="34" mb="0" cb="2"/><line nr="283" mi="0" ci="12" mb="0" cb="0"/><line nr="287" mi="0" ci="12" mb="0" cb="0"/><line nr="292" mi="0" ci="13" mb="0" cb="0"/><line nr="297" mi="0" ci="13" mb="0" cb="0"/><line nr="301" mi="0" ci="25" mb="0" cb="0"/><line nr="305" mi="0" ci="12" mb="0" cb="0"/><line nr="312" mi="0" ci="10" mb="0" cb="0"/><line nr="316" mi="0" ci="10" mb="0" cb="0"/><line nr="320" mi="0" ci="10" mb="0" cb="0"/><line nr="324" mi="0" ci="21" mb="0" cb="0"/><line nr="328" mi="0" ci="10" mb="0" cb="0"/><line nr="362" mi="0" ci="25" mb="0" cb="0"/><line nr="366" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1348" covered="1790"/><counter type="BRANCH" missed="22" covered="34"/><counter type="LINE" missed="4" covered="90"/><counter type="COMPLEXITY" missed="91" covered="121"/><counter type="METHOD" missed="69" covered="115"/><counter type="CLASS" missed="0" covered="22"/></sourcefile><sourcefile name="Functions.java"><line nr="9" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="25" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="10" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="22" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="21" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="200" covered="198"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="20" covered="21"/><counter type="METHOD" missed="16" covered="20"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="Predicates.java"><line nr="7" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="10" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="22" mb="0" cb="0"/><line nr="20" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="10" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="22" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="206" covered="165"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="21" covered="18"/><counter type="METHOD" missed="17" covered="17"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="StateMachine.java"><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="15" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="0"/><line nr="113" mi="0" ci="9" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="19" mb="0" cb="0"/><line nr="136" mi="0" ci="9" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="22" mb="0" cb="0"/><line nr="143" mi="9" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="380" covered="397"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="28" covered="29"/><counter type="METHOD" missed="23" covered="27"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="Consumers.java"><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="25" mb="0" cb="0"/><line nr="26" mi="0" ci="13" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="22" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="25" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="21" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="22" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="25" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="25" mb="0" cb="0"/><line nr="95" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="25" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="25" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="25" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="10" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="22" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="25" mb="0" cb="0"/><line nr="152" mi="0" ci="23" mb="0" cb="2"/><line nr="154" mi="0" ci="21" mb="0" cb="0"/><line nr="155" mi="0" ci="12" mb="0" cb="0"/><line nr="157" mi="0" ci="17" mb="0" cb="0"/><line nr="163" mi="25" ci="0" mb="0" cb="0"/><line nr="166" mi="18" ci="0" mb="0" cb="0"/><line nr="167" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="873" covered="850"/><counter type="BRANCH" missed="17" covered="19"/><counter type="LINE" missed="6" covered="42"/><counter type="COMPLEXITY" missed="75" covered="71"/><counter type="METHOD" missed="59" covered="69"/><counter type="CLASS" missed="1" covered="16"/></sourcefile><sourcefile name="Maybes.java"><line nr="7" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="20" mb="0" cb="2"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="80"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Statistics.java"><line nr="9" mi="0" ci="9" mb="0" cb="0"/><line nr="10" mi="0" ci="10" mb="0" cb="0"/><line nr="11" mi="0" ci="10" mb="0" cb="0"/><line nr="12" mi="0" ci="10" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="14" mb="0" cb="0"/><line nr="20" mi="0" ci="10" mb="0" cb="0"/><line nr="21" mi="0" ci="25" mb="0" cb="0"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="14" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="19" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="12" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="12" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="12" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="184" covered="345"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FlowableTransformers.java"><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="14" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="25" mb="0" cb="0"/><line nr="62" mi="0" ci="14" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="10" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="22" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="25" mb="0" cb="0"/><line nr="90" mi="0" ci="14" mb="0" cb="0"/><line nr="100" mi="18" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="37" mb="0" cb="0"/><line nr="110" mi="0" ci="18" mb="0" cb="0"/><line nr="118" mi="0" ci="14" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="9" mb="0" cb="0"/><line nr="130" mi="10" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="22" mb="0" cb="0"/><line nr="135" mi="0" ci="12" mb="0" cb="0"/><line nr="142" mi="0" ci="25" mb="0" cb="0"/><line nr="146" mi="0" ci="25" mb="0" cb="0"/><line nr="147" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="0" ci="20" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="37" mb="0" cb="0"/><line nr="165" mi="0" ci="20" mb="0" cb="0"/><line nr="174" mi="0" ci="13" mb="0" cb="0"/><line nr="179" mi="0" ci="13" mb="0" cb="0"/><line nr="185" mi="0" ci="11" mb="0" cb="0"/><line nr="188" mi="10" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="21" mb="0" cb="0"/><line nr="194" mi="0" ci="11" mb="0" cb="0"/><line nr="198" mi="0" ci="22" mb="0" cb="0"/><line nr="202" mi="0" ci="11" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="209" mi="0" ci="9" mb="0" cb="0"/><line nr="214" mi="0" ci="9" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="226" mi="0" ci="29" mb="0" cb="0"/><line nr="229" mi="0" ci="17" mb="0" cb="0"/><line nr="236" mi="0" ci="11" mb="0" cb="0"/><line nr="241" mi="0" ci="29" mb="0" cb="0"/><line nr="244" mi="0" ci="17" mb="0" cb="0"/><line nr="249" mi="10" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="22" mb="0" cb="0"/><line nr="254" mi="0" ci="11" mb="0" cb="0"/><line nr="261" mi="0" ci="9" mb="0" cb="0"/><line nr="265" mi="0" ci="25" mb="0" cb="0"/><line nr="269" mi="0" ci="14" mb="0" cb="0"/><line nr="276" mi="0" ci="29" mb="0" cb="0"/><line nr="280" mi="0" ci="16" mb="0" cb="0"/><line nr="286" mi="0" ci="11" mb="0" cb="0"/><line nr="291" mi="0" ci="37" mb="0" cb="2"/><line nr="293" mi="0" ci="33" mb="0" cb="0"/><line nr="297" mi="0" ci="39" mb="0" cb="4"/><line nr="298" mi="0" ci="12" mb="0" cb="0"/><line nr="300" mi="0" ci="29" mb="0" cb="0"/><line nr="301" mi="0" ci="11" mb="0" cb="0"/><line nr="303" mi="0" ci="9" mb="0" cb="0"/><line nr="310" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1086" covered="1348"/><counter type="BRANCH" missed="19" covered="29"/><counter type="LINE" missed="6" covered="57"/><counter type="COMPLEXITY" missed="88" covered="106"/><counter type="METHOD" missed="69" covered="101"/><counter type="CLASS" missed="0" covered="21"/></sourcefile><sourcefile name="BiFunctions.java"><line nr="9" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="10" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="22" mb="0" cb="0"/><line nr="23" mi="0" ci="11" mb="0" cb="0"/><line nr="29" mi="0" ci="21" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="25" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="21" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="246" covered="247"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="24" covered="26"/><counter type="METHOD" missed="19" covered="25"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Flowables.java"><line nr="15" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="18" mb="0" cb="0"/><line nr="26" mi="0" ci="15" mb="0" cb="0"/><line nr="30" mi="0" ci="13" mb="0" cb="0"/><line nr="34" mi="0" ci="13" mb="0" cb="0"/><line nr="39" mi="0" ci="12" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="76" covered="145"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RetryWhen.java"><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="13" mb="0" cb="0"/><line nr="59" mi="0" ci="37" mb="0" cb="0"/><line nr="67" mi="0" ci="19" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="82" mi="0" ci="25" mb="0" cb="0"/><line nr="85" mi="0" ci="23" mb="0" cb="2"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="88" mi="0" ci="17" mb="0" cb="0"/><line nr="97" mi="0" ci="33" mb="0" cb="0"/><line nr="101" mi="0" ci="24" mb="0" cb="2"/><line nr="102" mi="0" ci="11" mb="0" cb="0"/><line nr="103" mi="0" ci="38" mb="0" cb="2"/><line nr="104" mi="0" ci="24" mb="1" cb="1"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="17" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="31" mb="0" cb="2"/><line nr="108" mi="0" ci="29" mb="0" cb="2"/><line nr="109" mi="0" ci="24" mb="0" cb="2"/><line nr="110" mi="0" ci="10" mb="0" cb="0"/><line nr="111" mi="0" ci="17" mb="0" cb="0"/><line nr="112" mi="0" ci="20" mb="0" cb="0"/><line nr="114" mi="0" ci="19" mb="0" cb="0"/><line nr="120" mi="0" ci="22" mb="0" cb="0"/><line nr="123" mi="0" ci="14" mb="0" cb="0"/><line nr="128" mi="0" ci="25" mb="0" cb="0"/><line nr="131" mi="0" ci="23" mb="0" cb="2"/><line nr="132" mi="0" ci="11" mb="0" cb="0"/><line nr="134" mi="0" ci="31" mb="0" cb="0"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="143" mi="14" ci="0" mb="0" cb="0"/><line nr="147" mi="14" ci="0" mb="0" cb="0"/><line nr="151" mi="14" ci="0" mb="0" cb="0"/><line nr="155" mi="15" ci="0" mb="0" cb="0"/><line nr="159" mi="15" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="16" mb="0" cb="0"/><line nr="167" mi="0" ci="14" mb="0" cb="0"/><line nr="171" mi="14" ci="0" mb="0" cb="0"/><line nr="175" mi="14" ci="0" mb="0" cb="0"/><line nr="179" mi="16" ci="0" mb="0" cb="0"/><line nr="183" mi="15" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="12" mb="0" cb="0"/><line nr="189" mi="0" ci="12" mb="0" cb="0"/><line nr="190" mi="0" ci="10" mb="0" cb="0"/><line nr="192" mi="0" ci="13" mb="0" cb="0"/><line nr="193" mi="0" ci="10" mb="0" cb="0"/><line nr="194" mi="0" ci="11" mb="0" cb="0"/><line nr="195" mi="0" ci="10" mb="0" cb="0"/><line nr="197" mi="0" ci="9" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="202" mi="0" ci="13" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="207" mi="0" ci="13" mb="0" cb="0"/><line nr="208" mi="0" ci="9" mb="0" cb="0"/><line nr="212" mi="0" ci="10" mb="0" cb="0"/><line nr="213" mi="0" ci="9" mb="0" cb="0"/><line nr="217" mi="13" ci="0" mb="0" cb="0"/><line nr="218" mi="9" ci="0" mb="0" cb="0"/><line nr="221" mi="10" ci="0" mb="0" cb="0"/><line nr="222" mi="22" ci="0" mb="0" cb="0"/><line nr="225" mi="20" ci="0" mb="2" cb="0"/><line nr="226" mi="9" ci="0" mb="0" cb="0"/><line nr="228" mi="20" ci="0" mb="0" cb="0"/><line nr="235" mi="14" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="15" mb="0" cb="0"/><line nr="240" mi="0" ci="9" mb="0" cb="0"/><line nr="244" mi="0" ci="25" mb="0" cb="0"/><line nr="248" mi="0" ci="14" mb="0" cb="0"/><line nr="254" mi="0" ci="12" mb="0" cb="0"/><line nr="255" mi="0" ci="9" mb="0" cb="0"/><line nr="259" mi="0" ci="11" mb="0" cb="0"/><line nr="260" mi="0" ci="9" mb="0" cb="0"/><line nr="264" mi="0" ci="10" mb="0" cb="0"/><line nr="265" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="19" mb="0" cb="0"/><line nr="273" mi="0" ci="34" mb="0" cb="0"/><line nr="276" mi="0" ci="24" mb="0" cb="0"/><line nr="277" mi="0" ci="23" mb="1" cb="1"/><line nr="278" mi="0" ci="10" mb="0" cb="0"/><line nr="280" mi="22" ci="0" mb="0" cb="0"/><line nr="281" mi="12" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="9" mb="0" cb="0"/><line nr="289" mi="0" ci="14" mb="0" cb="0"/><line nr="293" mi="0" ci="13" mb="0" cb="0"/><line nr="297" mi="0" ci="10" mb="0" cb="0"/><line nr="298" mi="0" ci="22" mb="0" cb="2"/><line nr="299" mi="0" ci="18" mb="0" cb="0"/><line nr="301" mi="0" ci="32" mb="0" cb="0"/><line nr="312" mi="0" ci="9" mb="0" cb="0"/><line nr="313" mi="0" ci="10" mb="0" cb="0"/><line nr="314" mi="0" ci="10" mb="0" cb="0"/><line nr="315" mi="0" ci="8" mb="0" cb="0"/><line nr="318" mi="0" ci="10" mb="0" cb="0"/><line nr="322" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1408" covered="1425"/><counter type="BRANCH" missed="16" covered="30"/><counter type="LINE" missed="20" covered="79"/><counter type="COMPLEXITY" missed="67" covered="68"/><counter type="METHOD" missed="54" covered="58"/><counter type="CLASS" missed="2" covered="10"/></sourcefile><sourcefile name="IO.java"><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="28" mb="0" cb="0"/><line nr="26" mi="13" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="26" mb="0" cb="0"/><line nr="36" mi="0" ci="12" mb="0" cb="0"/><line nr="37" mi="0" ci="13" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><line nr="72" mi="9" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="314" covered="362"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="16" covered="23"/><counter type="METHOD" missed="13" covered="22"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ObservableTransformers.java"><line nr="7" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BiPredicates.java"><line nr="9" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="21" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="21" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="21" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="154" covered="172"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="15" covered="19"/><counter type="METHOD" missed="12" covered="18"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Bytes.java"><line nr="28" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="30" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="21" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="31" mb="0" cb="2"/><line nr="51" mi="0" ci="13" mb="0" cb="0"/><line nr="53" mi="0" ci="19" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="29" mb="0" cb="0"/><line nr="68" mi="0" ci="18" mb="0" cb="0"/><line nr="71" mi="0" ci="25" mb="0" cb="0"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="81" mi="10" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="22" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="11" mb="0" cb="0"/><line nr="105" mi="0" ci="25" mb="0" cb="0"/><line nr="108" mi="0" ci="16" mb="0" cb="0"/><line nr="111" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="113" mi="0" ci="12" mb="0" cb="0"/><line nr="117" mi="0" ci="13" mb="0" cb="0"/><line nr="122" mi="0" ci="26" mb="0" cb="0"/><line nr="125" mi="0" ci="11" mb="0" cb="0"/><line nr="126" mi="0" ci="20" mb="0" cb="2"/><line nr="127" mi="0" ci="16" mb="0" cb="0"/><line nr="131" mi="0" ci="19" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="14" mb="0" cb="0"/><line nr="144" mi="0" ci="21" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="152" mi="10" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="22" mb="0" cb="0"/><line nr="157" mi="0" ci="11" mb="0" cb="0"/><line nr="162" mi="10" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="22" mb="0" cb="0"/><line nr="167" mi="0" ci="10" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="10" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="22" mb="0" cb="0"/><line nr="176" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="10" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="21" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="22" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="939" covered="1005"/><counter type="BRANCH" missed="17" covered="25"/><counter type="LINE" missed="5" covered="49"/><counter type="COMPLEXITY" missed="76" covered="74"/><counter type="METHOD" missed="59" covered="70"/><counter type="CLASS" missed="0" covered="18"/></sourcefile><sourcefile name="SchedulerHelper.java"><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="13" mb="0" cb="0"/><line nr="22" mi="0" ci="13" mb="0" cb="0"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="28" mi="0" ci="25" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="32" mb="0" cb="2"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="31" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="21" mb="0" cb="0"/><line nr="45" mi="9" ci="11" mb="1" cb="1"/><line nr="46" mi="12" ci="0" mb="0" cb="0"/><line nr="48" mi="8" ci="0" mb="0" cb="0"/><line nr="49" mi="12" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="17" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="12" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="245" covered="320"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="20"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Callables.java"><line nr="7" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="25" mb="0" cb="0"/><line nr="16" mi="0" ci="10" mb="0" cb="0"/><line nr="23" mi="0" ci="21" mb="0" cb="0"/><line nr="27" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="128"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="9" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="8486" covered="9603"/><counter type="BRANCH" missed="129" covered="207"/><counter type="LINE" missed="56" covered="513"/><counter type="COMPLEXITY" missed="597" covered="684"/><counter type="METHOD" missed="474" covered="639"/><counter type="CLASS" missed="5" covered="136"/></package><package name="com/github/davidmoten/rx2/internal/flowable"><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStringSplit$2"><method name="&lt;init&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/String;Lio/reactivex/FlowableEmitter;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="125"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMinRequest$MinRequestSubscriber"><method name="&lt;init&gt;" desc="(IZLorg/reactivestreams/Subscriber;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="69"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drain" desc="()V" line="101"><counter type="INSTRUCTION" missed="0" covered="646"/><counter type="BRANCH" missed="0" covered="30"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="terminate" desc="()V" line="157"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="531" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="550" covered="1084"/><counter type="BRANCH" missed="3" covered="35"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="6" covered="27"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStateMachine"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function3;Lio/reactivex/functions/BiPredicate;Lio/reactivex/BackpressureStrategy;I)V" line="31"><counter type="INSTRUCTION" missed="10" covered="129"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function3;Lio/reactivex/functions/BiPredicate;Lio/reactivex/BackpressureStrategy;I)Lio/reactivex/FlowableTransformer;" line="48"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;" line="56"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="(Lio/reactivex/functions/Function3;Lio/reactivex/functions/BiPredicate;Lcom/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$Mutable;Lio/reactivex/BackpressureStrategy;)Lio/reactivex/functions/Function;" line="78"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Lio/reactivex/FlowableEmitter;)Lcom/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$NotificationEmitter;" line="139"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="121"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="164" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="193" covered="220"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerDecode"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Ljava/nio/charset/CharsetDecoder;Lio/reactivex/BackpressureStrategy;I)Lio/reactivex/FlowableTransformer;" line="24"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="([BLjava/nio/ByteBuffer;ZLjava/nio/charset/CharsetDecoder;Lio/reactivex/FlowableEmitter;)Lcom/github/davidmoten/rx2/internal/flowable/TransformerDecode$Result;" line="64"><counter type="INSTRUCTION" missed="39" covered="404"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="242" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="300" covered="485"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStringSplit$1"><method name="&lt;init&gt;" desc="(Ljava/util/regex/Pattern;Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/String;Ljava/lang/String;Lio/reactivex/FlowableEmitter;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="18" covered="195"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="138" covered="223"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableReverse$2$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/internal/flowable/FlowableReverse$2;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="50"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="76" covered="103"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMaxRequest"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;J)V" line="20"><counter type="INSTRUCTION" missed="10" covered="65"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="101"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMapLast$MapLastSubscriber"><method name="&lt;init&gt;" desc="(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Function;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="57"><counter type="INSTRUCTION" missed="17" covered="95"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="70"><counter type="INSTRUCTION" missed="17" covered="159"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="91"><counter type="INSTRUCTION" missed="17" covered="95"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="103"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="request" desc="(J)V" line="108"><counter type="INSTRUCTION" missed="0" covered="154"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="353" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="443" covered="651"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="5" covered="45"/><counter type="COMPLEXITY" missed="12" covered="11"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$NotificationEmitter"><method name="&lt;init&gt;" desc="(Lio/reactivex/FlowableEmitter;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDisposable" desc="(Lio/reactivex/disposables/Disposable;)V" line="167"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCancellable" desc="(Lio/reactivex/functions/Cancellable;)V" line="172"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="requested" desc="()J" line="177"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCancelled" desc="()Z" line="182"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="()Lio/reactivex/FlowableEmitter;" line="188"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="158" covered="117"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="7" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerDecode$2"><method name="&lt;init&gt;" desc="(Ljava/nio/charset/CharsetDecoder;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/nio/ByteBuffer;[BLio/reactivex/FlowableEmitter;)Ljava/nio/ByteBuffer;" line="35"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="52"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerDecode$1"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/nio/ByteBuffer;" line="28"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerDecode$3"><method name="&lt;init&gt;" desc="(Ljava/nio/charset/CharsetDecoder;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/nio/ByteBuffer;Lio/reactivex/FlowableEmitter;)Z" line="43"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="43"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator"><method name="&lt;init&gt;" desc="(Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;JLorg/reactivestreams/Subscriber;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="158"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribe" desc="(Lio/reactivex/Flowable;Lio/reactivex/Flowable;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="110"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancelAll" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drain" desc="()V" line="130"><counter type="INSTRUCTION" missed="45" covered="666"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="5" covered="39"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleItem" desc="(Ljava/lang/Object;Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$Source;)Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator$Emitted;" line="202"><counter type="INSTRUCTION" missed="37" covered="637"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="4" covered="50"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleCompleted" desc="(Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$Source;)Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator$Status;" line="295"><counter type="INSTRUCTION" missed="0" covered="286"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkToRequestMore" desc="()V" line="319"><counter type="INSTRUCTION" missed="0" covered="250"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="completed" desc="(Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$Source;)V" line="334"><counter type="INSTRUCTION" missed="42" covered="154"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="350"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V" line="358"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="poll" desc="(Ljava/util/Map;Ljava/util/Queue;Ljava/lang/Object;)Ljava/lang/Object;" line="367"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offer" desc="(Ljava/lang/Object;)V" line="376"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="1315" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1458" covered="2615"/><counter type="BRANCH" missed="9" covered="81"/><counter type="LINE" missed="11" covered="171"/><counter type="COMPLEXITY" missed="11" covered="53"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$3"><method name="&lt;init&gt;" desc="()V" line="121"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Lio/reactivex/Notification;)Z" line="125"><counter type="INSTRUCTION" missed="10" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="48"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableReverse"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="(Lio/reactivex/Flowable;)Lio/reactivex/Flowable;" line="17"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverse" desc="(Ljava/util/List;)Ljava/lang/Iterable;" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="87"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/internal/flowable/TransformerStateMachine;Lio/reactivex/Flowable;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lio/reactivex/Flowable;" line="59"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="102"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$2"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$Mutable;Lio/reactivex/functions/Function3;Lio/reactivex/functions/BiPredicate;Lio/reactivex/BackpressureStrategy;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lio/reactivex/Notification;)Lio/reactivex/Flowable;" line="83"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="52"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableServerSocket$1"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/net/ServerSocket;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableServerSocket$2"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/net/ServerSocket;" line="52"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableServerSocket$3"><method name="&lt;init&gt;" desc="(IILio/reactivex/functions/Action;Lio/reactivex/functions/Predicate;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/net/ServerSocket;)Lio/reactivex/Flowable;" line="69"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="55"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableDoOnEmpty"><method name="&lt;init&gt;" desc="(Lorg/reactivestreams/Publisher;Lio/reactivex/functions/Action;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="95"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableServerSocket$4"><method name="&lt;init&gt;" desc="(JILjava/net/ServerSocket;Lio/reactivex/functions/Action;Lio/reactivex/functions/Predicate;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lio/reactivex/Emitter;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="66"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableServerSocket$5"><method name="&lt;init&gt;" desc="(Ljava/net/Socket;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/io/InputStream;" line="133"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableServerSocket$6"><method name="&lt;init&gt;" desc="(I)V" line="136"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/io/InputStream;)Lio/reactivex/Flowable;" line="139"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$UnsubscribedNotificationHolder"><method name="&lt;init&gt;" desc="()V" line="112"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unsubscribedNotification" desc="()Lio/reactivex/Notification;" line="117"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/DelimitedStringLinkedList$Node"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/github/davidmoten/rx2/internal/flowable/DelimitedStringLinkedList$Node;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="42"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="49"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableReverse$1"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/util/List;)Ljava/lang/Iterable;" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableReverse$2"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="33"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMapLast"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Lio/reactivex/functions/Function;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="75"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableRepeat"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;J)V" line="17"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="85"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStringSplit"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Ljava/lang/String;Ljava/util/regex/Pattern;Lio/reactivex/BackpressureStrategy;I)Lio/reactivex/FlowableTransformer;" line="23"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="80"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableStateMachine"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function3;Lio/reactivex/functions/BiConsumer;Lcom/github/davidmoten/rx2/functions/Consumer3;Lio/reactivex/BackpressureStrategy;I)V" line="42"><counter type="INSTRUCTION" missed="0" covered="150"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="117" covered="196"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMinRequest"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;IZ)V" line="23"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="121"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableFetchPagesByRequest$1"><method name="&lt;init&gt;" desc="(JLio/reactivex/functions/BiFunction;I)V" line="25"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lio/reactivex/Flowable;" line="30"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="88" covered="122"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMatch$ItemA"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="444"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableFetchPagesByRequest$1$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/internal/flowable/FlowableFetchPagesByRequest$1;Ljava/util/concurrent/atomic/AtomicLong;Lio/reactivex/subjects/ReplaySubject;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(J)V" line="35"><counter type="INSTRUCTION" missed="0" covered="165"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="98" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="117" covered="196"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableServerSocket"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/concurrent/Callable;IILio/reactivex/functions/Action;ILio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;" line="31"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createServerSocketFactory" desc="(Ljava/util/concurrent/Callable;I)Ljava/util/concurrent/Callable;" line="49"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createServerSocket" desc="(Ljava/util/concurrent/Callable;J)Ljava/net/ServerSocket;" line="59"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFlowableFactory" desc="(IILio/reactivex/functions/Action;Lio/reactivex/functions/Predicate;)Lio/reactivex/functions/Function;" line="66"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createServerSocketFlowable" desc="(Ljava/net/ServerSocket;JILio/reactivex/functions/Action;Lio/reactivex/functions/Predicate;)Lio/reactivex/Flowable;" line="77"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="acceptConnection" desc="(JILjava/net/ServerSocket;Lio/reactivex/Emitter;Lio/reactivex/functions/Action;Lio/reactivex/functions/Predicate;)V" line="91"><counter type="INSTRUCTION" missed="59" covered="169"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeQuietly" desc="(Ljava/net/Socket;)V" line="121"><counter type="INSTRUCTION" missed="8" covered="28"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSocketFlowable" desc="(Ljava/net/Socket;JI)Lio/reactivex/Flowable;" line="128"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTimeout" desc="(Ljava/net/Socket;J)V" line="148"><counter type="INSTRUCTION" missed="20" covered="30"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="287" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="393" covered="437"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="6" covered="32"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMatch$Source"><method name="values" desc="()[Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$Source;" line="449"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$Source;" line="449"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="449"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="449"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMatch"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Lio/reactivex/Flowable;Lio/reactivex/functions/Function;Lio/reactivex/functions/Function;Lio/reactivex/functions/BiFunction;J)V" line="35"><counter type="INSTRUCTION" missed="0" covered="165"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="116" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="135" covered="228"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMaxRequest$MaxRequestSubscriber"><method name="&lt;init&gt;" desc="(JLorg/reactivestreams/Subscriber;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="73"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="400"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requestMore" desc="()V" line="141"><counter type="INSTRUCTION" missed="17" covered="279"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="450" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="486" covered="935"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="1" covered="61"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableWindowMinMax"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;ILjava/util/Comparator;Lcom/github/davidmoten/rx2/internal/flowable/FlowableWindowMinMax$Metric;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="153"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableStateMachine$StateMachineSubscriber"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lio/reactivex/functions/Function3;Lio/reactivex/functions/BiConsumer;Lcom/github/davidmoten/rx2/functions/Consumer3;Lio/reactivex/BackpressureStrategy;ILorg/reactivestreams/Subscriber;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="255"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createdState" desc="()Z" line="143"><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="202"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="184"><counter type="INSTRUCTION" missed="0" covered="192"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="206"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="214"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel_" desc="()V" line="220"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext_" desc="(Ljava/lang/Object;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError_" desc="(Ljava/lang/Throwable;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete_" desc="()V" line="245"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drain" desc="()V" line="253"><counter type="INSTRUCTION" missed="0" covered="548"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="936" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="955" covered="1847"/><counter type="BRANCH" missed="4" covered="52"/><counter type="LINE" missed="0" covered="133"/><counter type="COMPLEXITY" missed="7" covered="39"/><counter type="METHOD" missed="3" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableFetchPagesByRequest$Count"><method name="&lt;init&gt;" desc="(Lio/reactivex/subjects/Subject;J)V" line="71"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Ljava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="125"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerDecode$Result"><method name="&lt;init&gt;" desc="(Ljava/nio/ByteBuffer;Z)V" line="55"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="49"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMatch$MySubscriber"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$Source;Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$Receiver;J)V" line="389"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="397"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="404"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="409"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="414"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="423"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="428"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="133" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="152" covered="266"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableCollectWhile"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/BiPredicate;Z)V" line="32"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="120"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/DelimitedStringLinkedList"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchPosition" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCalled" desc="()Z" line="47"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/String;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="239"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remaining" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="176"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="520"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractFromHeadPositionToSearchPosition" desc="()Ljava/lang/String;" line="141"><counter type="INSTRUCTION" missed="21" covered="273"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetPositionsAfterExtract" desc="(Lcom/github/davidmoten/rx2/internal/flowable/DelimitedStringLinkedList$Node;I)V" line="165"><counter type="INSTRUCTION" missed="18" covered="204"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dropFirst" desc="()V" line="187"><counter type="INSTRUCTION" missed="158" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="203"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="799" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1015" covered="1547"/><counter type="BRANCH" missed="7" covered="47"/><counter type="LINE" missed="13" covered="98"/><counter type="COMPLEXITY" missed="9" covered="33"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator$Status"><method name="values" desc="()[Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator$Status;" line="314"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator$Status;" line="314"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="314"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="314"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$2$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$2;Lio/reactivex/Notification;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribe" desc="(Lio/reactivex/FlowableEmitter;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="250"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="111" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="130" covered="278"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableWindowMinMax$Metric"><method name="values" desc="()[Lcom/github/davidmoten/rx2/internal/flowable/FlowableWindowMinMax$Metric;" line="147"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/internal/flowable/FlowableWindowMinMax$Metric;" line="147"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="147"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="147"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableFetchPagesByRequest"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Lio/reactivex/functions/BiFunction;JI)Lio/reactivex/Flowable;" line="25"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableStringSplitSimple"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Ljava/lang/String;)V" line="23"><counter type="INSTRUCTION" missed="10" covered="81"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="117"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableWindowMinMax$WindowMinMaxSubscriber"><method name="&lt;init&gt;" desc="(ILjava/util/Comparator;Lcom/github/davidmoten/rx2/internal/flowable/FlowableWindowMinMax$Metric;Lorg/reactivestreams/Subscriber;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="84"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="91"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToQueue" desc="(Ljava/lang/Object;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="139"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="284" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="303" covered="628"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMatch$MyError"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="436"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableCollectWhile$CollectWhileSubscriber"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;Lio/reactivex/functions/BiFunction;Lio/reactivex/functions/BiPredicate;Lorg/reactivestreams/Subscriber;Z)V" line="56"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryOnNext" desc="(Ljava/lang/Object;)Z" line="96"><counter type="INSTRUCTION" missed="18" covered="349"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectionCreated" desc="()Z" line="132"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="161"><counter type="INSTRUCTION" missed="0" covered="149"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drain" desc="()V" line="178"><counter type="INSTRUCTION" missed="0" covered="443"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="226"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="235"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="735" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="772" covered="1459"/><counter type="BRANCH" missed="4" covered="46"/><counter type="LINE" missed="1" covered="101"/><counter type="COMPLEXITY" missed="7" covered="33"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableDoOnEmpty$DoOnEmptySubscriber"><method name="&lt;init&gt;" desc="(Lorg/reactivestreams/Subscriber;Lio/reactivex/functions/Action;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="61"><counter type="INSTRUCTION" missed="17" covered="134"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="85"><counter type="INSTRUCTION" missed="17" covered="52"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="99"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="221" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="274" covered="380"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableStringSplitSimple$StringSplitSubscriber"><method name="&lt;init&gt;" desc="(Lorg/reactivestreams/Subscriber;Ljava/lang/String;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="74"><counter type="INSTRUCTION" missed="0" covered="157"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/String;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drain" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="750"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="()Z" line="180"><counter type="INSTRUCTION" missed="18" covered="92"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="619" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="656" covered="1248"/><counter type="BRANCH" missed="3" covered="39"/><counter type="LINE" missed="1" covered="84"/><counter type="COMPLEXITY" missed="6" covered="29"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator$Emitted"><method name="values" desc="()[Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator$Emitted;" line="290"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/internal/flowable/FlowableMatch$MatchCoordinator$Emitted;" line="290"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="290"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="290"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="73"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/FlowableRepeat$RepeatSubscription"><method name="&lt;init&gt;" desc="(Lorg/reactivestreams/Subscriber;Ljava/lang/Object;J)V" line="38"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="47"><counter type="INSTRUCTION" missed="0" covered="282"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="162" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="181" covered="371"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/TransformerStateMachine$Mutable"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FlowableReverse.java"><line nr="11" mi="0" ci="9" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="19" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="22" mb="0" cb="0"/><line nr="24" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="25" mb="0" cb="0"/><line nr="33" mi="0" ci="24" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="39" mi="0" ci="34" mb="0" cb="2"/><line nr="44" mi="0" ci="13" mb="0" cb="0"/><line nr="45" mi="0" ci="14" mb="0" cb="0"/><line nr="50" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="220" covered="263"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="16" covered="20"/><counter type="METHOD" missed="13" covered="18"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="FlowableWindowMinMax.java"><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="34" mb="0" cb="2"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="20" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="13" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="23" mb="1" cb="1"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="14" mb="0" cb="0"/><line nr="80" mi="0" ci="17" mb="0" cb="0"/><line nr="84" mi="0" ci="21" mb="1" cb="1"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="17" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="13" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="25" mb="0" cb="2"/><line nr="116" mi="0" ci="12" mb="0" cb="0"/><line nr="118" mi="0" ci="28" mb="0" cb="2"/><line nr="120" mi="0" ci="14" mb="0" cb="0"/><line nr="121" mi="0" ci="15" mb="0" cb="0"/><line nr="123" mi="0" ci="21" mb="0" cb="0"/><line nr="125" mi="0" ci="11" mb="0" cb="0"/><line nr="127" mi="0" ci="17" mb="0" cb="0"/><line nr="131" mi="0" ci="44" mb="0" cb="4"/><line nr="132" mi="0" ci="15" mb="0" cb="0"/><line nr="134" mi="0" ci="24" mb="0" cb="0"/><line nr="135" mi="0" ci="14" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="22" mb="0" cb="2"/><line nr="140" mi="0" ci="13" mb="0" cb="0"/><line nr="142" mi="0" ci="22" mb="0" cb="0"/><line nr="147" mi="23" ci="31" mb="0" cb="0"/><line nr="148" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="477" covered="844"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="54"/><counter type="COMPLEXITY" missed="16" covered="24"/><counter type="METHOD" missed="11" covered="18"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="TransformerStateMachine.java"><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="10" ci="24" mb="1" cb="1"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="16" mb="0" cb="0"/><line nr="56" mi="0" ci="30" mb="0" cb="0"/><line nr="59" mi="0" ci="15" mb="0" cb="0"/><line nr="60" mi="0" ci="20" mb="0" cb="0"/><line nr="63" mi="0" ci="20" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="37" mb="0" cb="0"/><line nr="83" mi="0" ci="32" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="22" mb="0" cb="2"/><line nr="89" mi="0" ci="23" mb="0" cb="0"/><line nr="90" mi="0" ci="21" mb="0" cb="2"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="20" mb="0" cb="0"/><line nr="98" mi="0" ci="31" mb="0" cb="2"/><line nr="99" mi="0" ci="42" mb="0" cb="4"/><line nr="100" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="0" ci="30" mb="1" cb="1"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="105" mi="0" ci="17" mb="0" cb="0"/><line nr="112" mi="10" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="13" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="22" mb="0" cb="0"/><line nr="125" mi="10" ci="24" mb="1" cb="1"/><line nr="133" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="12" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="11" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="12" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="162" mi="0" ci="12" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="0" cb="0"/><line nr="167" mi="11" ci="0" mb="0" cb="0"/><line nr="172" mi="11" ci="0" mb="0" cb="0"/><line nr="177" mi="11" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="11" mb="0" cb="0"/><line nr="188" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="738" covered="892"/><counter type="BRANCH" missed="9" covered="23"/><counter type="LINE" missed="5" covered="51"/><counter type="COMPLEXITY" missed="38" covered="43"/><counter type="METHOD" missed="29" covered="36"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><sourcefile name="FlowableFetchPagesByRequest.java"><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="34" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="13" mb="0" cb="0"/><line nr="32" mi="0" ci="33" mb="0" cb="0"/><line nr="35" mi="0" ci="12" mb="0" cb="0"/><line nr="36" mi="0" ci="21" mb="1" cb="1"/><line nr="39" mi="0" ci="17" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="14" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="17" mb="0" cb="0"/><line nr="56" mi="0" ci="16" mb="0" cb="0"/><line nr="57" mi="0" ci="18" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="24" mb="1" cb="1"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="326" covered="490"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="17" covered="18"/><counter type="METHOD" missed="12" covered="17"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="FlowableRepeat.java"><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="19" mi="0" ci="10" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="16" mb="0" cb="0"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="21" mb="1" cb="1"/><line nr="48" mi="0" ci="24" mb="1" cb="1"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="18" mb="0" cb="0"/><line nr="53" mi="0" ci="77" mb="0" cb="8"/><line nr="54" mi="0" ci="22" mb="0" cb="0"/><line nr="56" mi="0" ci="36" mb="1" cb="1"/><line nr="57" mi="0" ci="37" mb="0" cb="4"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="17" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="245" covered="456"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="11" covered="15"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DelimitedStringLinkedList.java"><line nr="12" mi="0" ci="12" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="24" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="21" mb="0" cb="2"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="30" mb="0" cb="2"/><line nr="56" mi="0" ci="14" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="22" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="21" mb="0" cb="2"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="17" mb="0" cb="0"/><line nr="74" mi="0" ci="21" mb="0" cb="2"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="20" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="31" mb="0" cb="2"/><line nr="81" mi="0" ci="20" mb="0" cb="0"/><line nr="83" mi="0" ci="22" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="20" mb="0" cb="2"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="30" mb="0" cb="2"/><line nr="93" mi="0" ci="29" mb="0" cb="2"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="23" mb="0" cb="2"/><line nr="98" mi="0" ci="23" mb="0" cb="2"/><line nr="99" mi="0" ci="21" mb="0" cb="2"/><line nr="100" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="19" mb="0" cb="0"/><line nr="103" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="36" mb="0" cb="2"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="17" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="0"/><line nr="111" mi="0" ci="45" mb="0" cb="2"/><line nr="112" mi="0" ci="20" mb="0" cb="2"/><line nr="117" mi="0" ci="10" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="22" mb="0" cb="0"/><line nr="124" mi="0" ci="13" mb="0" cb="0"/><line nr="125" mi="0" ci="25" mb="0" cb="2"/><line nr="126" mi="0" ci="22" mb="0" cb="2"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="21" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="0"/><line nr="136" mi="0" ci="18" mb="0" cb="0"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="12" mb="0" cb="0"/><line nr="143" mi="0" ci="10" mb="0" cb="0"/><line nr="145" mi="0" ci="37" mb="0" cb="4"/><line nr="146" mi="0" ci="18" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="31" mb="0" cb="2"/><line nr="149" mi="0" ci="20" mb="0" cb="0"/><line nr="150" mi="0" ci="31" mb="0" cb="2"/><line nr="151" mi="0" ci="17" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="22" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="0"/><line nr="158" mi="9" ci="15" mb="1" cb="1"/><line nr="159" mi="12" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="20" mb="0" cb="0"/><line nr="165" mi="0" ci="10" mb="0" cb="0"/><line nr="166" mi="0" ci="23" mb="0" cb="2"/><line nr="167" mi="0" ci="22" mb="0" cb="2"/><line nr="168" mi="0" ci="11" mb="0" cb="0"/><line nr="171" mi="0" ci="20" mb="0" cb="0"/><line nr="172" mi="0" ci="10" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="174" mi="0" ci="12" mb="0" cb="0"/><line nr="176" mi="0" ci="19" mb="0" cb="0"/><line nr="177" mi="0" ci="10" mb="0" cb="0"/><line nr="178" mi="9" ci="16" mb="1" cb="1"/><line nr="179" mi="9" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="20" mb="0" cb="0"/><line nr="182" mi="0" ci="11" mb="0" cb="0"/><line nr="184" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="22" ci="0" mb="2" cb="0"/><line nr="188" mi="10" ci="0" mb="0" cb="0"/><line nr="189" mi="10" ci="0" mb="0" cb="0"/><line nr="190" mi="11" ci="0" mb="0" cb="0"/><line nr="192" mi="32" ci="0" mb="2" cb="0"/><line nr="193" mi="12" ci="0" mb="0" cb="0"/><line nr="195" mi="19" ci="0" mb="0" cb="0"/><line nr="196" mi="12" ci="0" mb="0" cb="0"/><line nr="197" mi="10" ci="0" mb="0" cb="0"/><line nr="198" mi="10" ci="0" mb="0" cb="0"/><line nr="200" mi="8" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="10" mb="0" cb="0"/><line nr="204" mi="0" ci="10" mb="0" cb="0"/><line nr="205" mi="0" ci="10" mb="0" cb="0"/><line nr="206" mi="0" ci="10" mb="0" cb="0"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1093" covered="1596"/><counter type="BRANCH" missed="8" covered="48"/><counter type="LINE" missed="14" covered="102"/><counter type="COMPLEXITY" missed="14" covered="36"/><counter type="METHOD" missed="8" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FlowableCollectWhile.java"><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="20" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="57" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="23" mb="1" cb="1"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="84" mi="0" ci="17" mb="0" cb="0"/><line nr="89" mi="0" ci="22" mb="0" cb="2"/><line nr="90" mi="0" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="17" mb="0" cb="0"/><line nr="96" mi="0" ci="21" mb="0" cb="2"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="44" mb="0" cb="4"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="23" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="108" mi="0" ci="9" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="20" mb="0" cb="2"/><line nr="111" mi="0" ci="13" mb="0" cb="0"/><line nr="112" mi="9" ci="12" mb="1" cb="1"/><line nr="113" mi="9" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="24" mb="0" cb="0"/><line nr="118" mi="0" ci="21" mb="0" cb="2"/><line nr="119" mi="0" ci="12" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="0" cb="0"/><line nr="125" mi="0" ci="17" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="33" mb="0" cb="2"/><line nr="132" mi="0" ci="12" mb="0" cb="0"/><line nr="133" mi="0" ci="21" mb="0" cb="2"/><line nr="134" mi="0" ci="12" mb="0" cb="0"/><line nr="136" mi="0" ci="18" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="0"/><line nr="140" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="21" mb="0" cb="2"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="19" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="155" mi="0" ci="10" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="21" mb="0" cb="2"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="19" mb="0" cb="0"/><line nr="165" mi="0" ci="20" mb="0" cb="2"/><line nr="166" mi="0" ci="10" mb="0" cb="0"/><line nr="169" mi="0" ci="21" mb="0" cb="2"/><line nr="170" mi="0" ci="12" mb="0" cb="0"/><line nr="173" mi="0" ci="19" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="21" mb="0" cb="2"/><line nr="179" mi="0" ci="9" mb="0" cb="0"/><line nr="181" mi="0" ci="11" mb="0" cb="0"/><line nr="182" mi="0" ci="9" mb="0" cb="0"/><line nr="183" mi="0" ci="22" mb="0" cb="2"/><line nr="184" mi="0" ci="21" mb="0" cb="2"/><line nr="185" mi="0" ci="10" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="19" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="191" mi="0" ci="20" mb="0" cb="2"/><line nr="192" mi="0" ci="20" mb="0" cb="2"/><line nr="195" mi="0" ci="10" mb="0" cb="0"/><line nr="196" mi="0" ci="20" mb="0" cb="2"/><line nr="197" mi="0" ci="10" mb="0" cb="0"/><line nr="198" mi="0" ci="12" mb="0" cb="0"/><line nr="200" mi="0" ci="19" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="208" mi="0" ci="20" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="211" mi="0" ci="8" mb="0" cb="0"/><line nr="212" mi="0" ci="46" mb="0" cb="4"/><line nr="213" mi="0" ci="13" mb="0" cb="0"/><line nr="215" mi="0" ci="21" mb="0" cb="0"/><line nr="216" mi="0" ci="20" mb="0" cb="2"/><line nr="217" mi="0" ci="8" mb="0" cb="0"/><line nr="219" mi="0" ci="17" mb="0" cb="0"/><line nr="222" mi="0" ci="17" mb="0" cb="0"/><line nr="226" mi="0" ci="21" mb="1" cb="1"/><line nr="227" mi="0" ci="12" mb="0" cb="0"/><line nr="228" mi="0" ci="11" mb="0" cb="0"/><line nr="229" mi="0" ci="9" mb="0" cb="0"/><line nr="231" mi="0" ci="17" mb="0" cb="0"/><line nr="235" mi="0" ci="10" mb="0" cb="0"/><line nr="236" mi="0" ci="10" mb="0" cb="0"/><line nr="237" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="854" covered="1579"/><counter type="BRANCH" missed="5" covered="47"/><counter type="LINE" missed="1" covered="111"/><counter type="COMPLEXITY" missed="11" covered="37"/><counter type="METHOD" missed="6" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FlowableMatch.java"><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="36" mb="0" cb="2"/><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="20" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="13" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="16" mb="0" cb="0"/><line nr="103" mi="0" ci="16" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="21" mb="1" cb="1"/><line nr="111" mi="0" ci="12" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="17" mb="0" cb="0"/><line nr="118" mi="0" ci="21" mb="1" cb="1"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="17" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="21" mb="0" cb="2"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="18" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="22" mb="0" cb="2"/><line nr="140" mi="0" ci="21" mb="0" cb="2"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="20" mb="0" cb="0"/><line nr="147" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="9" ci="0" mb="0" cb="0"/><line nr="149" mi="9" ci="0" mb="0" cb="0"/><line nr="150" mi="11" ci="0" mb="0" cb="0"/><line nr="151" mi="8" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="20" mb="0" cb="2"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="30" mb="0" cb="2"/><line nr="157" mi="0" ci="14" mb="0" cb="0"/><line nr="158" mi="0" ci="21" mb="0" cb="2"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="0" ci="30" mb="0" cb="2"/><line nr="161" mi="0" ci="11" mb="0" cb="0"/><line nr="163" mi="0" ci="40" mb="0" cb="2"/><line nr="165" mi="0" ci="12" mb="0" cb="0"/><line nr="166" mi="0" ci="21" mb="0" cb="2"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="169" mi="0" ci="40" mb="0" cb="2"/><line nr="171" mi="0" ci="9" mb="0" cb="0"/><line nr="172" mi="0" ci="13" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="176" mi="0" ci="21" mb="0" cb="0"/><line nr="177" mi="0" ci="21" mb="0" cb="2"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="30" mb="0" cb="2"/><line nr="180" mi="0" ci="11" mb="0" cb="0"/><line nr="183" mi="0" ci="31" mb="0" cb="2"/><line nr="184" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="17" mb="0" cb="0"/><line nr="188" mi="0" ci="21" mb="0" cb="0"/><line nr="189" mi="0" ci="12" mb="0" cb="0"/><line nr="190" mi="0" ci="20" mb="0" cb="2"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="17" mb="0" cb="0"/><line nr="202" mi="0" ci="21" mb="0" cb="2"/><line nr="205" mi="0" ci="9" mb="0" cb="0"/><line nr="208" mi="0" ci="12" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="9" mb="0" cb="0"/><line nr="211" mi="0" ci="11" mb="0" cb="0"/><line nr="212" mi="0" ci="9" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="214" mi="0" ci="13" mb="0" cb="0"/><line nr="215" mi="0" ci="20" mb="0" cb="2"/><line nr="217" mi="0" ci="12" mb="0" cb="0"/><line nr="218" mi="0" ci="10" mb="0" cb="0"/><line nr="221" mi="0" ci="22" mb="0" cb="0"/><line nr="224" mi="0" ci="13" mb="0" cb="0"/><line nr="225" mi="8" ci="0" mb="0" cb="0"/><line nr="226" mi="9" ci="0" mb="0" cb="0"/><line nr="227" mi="11" ci="0" mb="0" cb="0"/><line nr="228" mi="9" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="230" mi="0" ci="11" mb="0" cb="0"/><line nr="231" mi="0" ci="9" mb="0" cb="0"/><line nr="235" mi="0" ci="37" mb="0" cb="4"/><line nr="237" mi="0" ci="9" mb="0" cb="0"/><line nr="238" mi="0" ci="10" mb="0" cb="0"/><line nr="239" mi="0" ci="9" mb="0" cb="0"/><line nr="241" mi="0" ci="22" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="0" ci="18" mb="0" cb="0"/><line nr="249" mi="0" ci="12" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="251" mi="0" ci="9" mb="0" cb="0"/><line nr="252" mi="0" ci="11" mb="0" cb="0"/><line nr="253" mi="0" ci="9" mb="0" cb="0"/><line nr="254" mi="0" ci="8" mb="0" cb="0"/><line nr="255" mi="0" ci="13" mb="0" cb="0"/><line nr="256" mi="0" ci="20" mb="0" cb="2"/><line nr="258" mi="0" ci="12" mb="0" cb="0"/><line nr="259" mi="0" ci="10" mb="0" cb="0"/><line nr="262" mi="0" ci="22" mb="0" cb="0"/><line nr="265" mi="0" ci="13" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="9" mb="0" cb="0"/><line nr="268" mi="0" ci="11" mb="0" cb="0"/><line nr="269" mi="0" ci="9" mb="0" cb="0"/><line nr="270" mi="0" ci="8" mb="0" cb="0"/><line nr="271" mi="0" ci="11" mb="0" cb="0"/><line nr="272" mi="0" ci="9" mb="0" cb="0"/><line nr="276" mi="0" ci="37" mb="0" cb="4"/><line nr="278" mi="0" ci="9" mb="0" cb="0"/><line nr="279" mi="0" ci="10" mb="0" cb="0"/><line nr="280" mi="0" ci="9" mb="0" cb="0"/><line nr="282" mi="0" ci="22" mb="0" cb="0"/><line nr="286" mi="0" ci="9" mb="0" cb="0"/><line nr="287" mi="0" ci="9" mb="0" cb="0"/><line nr="290" mi="23" ci="35" mb="0" cb="0"/><line nr="291" mi="0" ci="25" mb="0" cb="0"/><line nr="295" mi="0" ci="10" mb="0" cb="0"/><line nr="297" mi="0" ci="21" mb="0" cb="2"/><line nr="298" mi="0" ci="10" mb="0" cb="0"/><line nr="299" mi="0" ci="75" mb="2" cb="4"/><line nr="301" mi="0" ci="19" mb="0" cb="0"/><line nr="302" mi="0" ci="74" mb="1" cb="5"/><line nr="304" mi="0" ci="20" mb="0" cb="2"/><line nr="305" mi="0" ci="9" mb="0" cb="0"/><line nr="306" mi="0" ci="10" mb="0" cb="0"/><line nr="307" mi="0" ci="9" mb="0" cb="0"/><line nr="309" mi="0" ci="18" mb="0" cb="0"/><line nr="310" mi="0" ci="9" mb="0" cb="0"/><line nr="314" mi="23" ci="31" mb="0" cb="0"/><line nr="315" mi="0" ci="19" mb="0" cb="0"/><line nr="319" mi="0" ci="40" mb="0" cb="4"/><line nr="320" mi="0" ci="10" mb="0" cb="0"/><line nr="321" mi="0" ci="13" mb="0" cb="0"/><line nr="322" mi="0" ci="49" mb="0" cb="4"/><line nr="323" mi="0" ci="10" mb="0" cb="0"/><line nr="324" mi="0" ci="13" mb="0" cb="0"/><line nr="325" mi="0" ci="52" mb="0" cb="4"/><line nr="326" mi="0" ci="10" mb="0" cb="0"/><line nr="327" mi="0" ci="10" mb="0" cb="0"/><line nr="328" mi="0" ci="12" mb="0" cb="0"/><line nr="329" mi="0" ci="12" mb="0" cb="0"/><line nr="331" mi="0" ci="17" mb="0" cb="0"/><line nr="334" mi="0" ci="21" mb="0" cb="2"/><line nr="335" mi="0" ci="21" mb="1" cb="1"/><line nr="336" mi="0" ci="11" mb="0" cb="0"/><line nr="337" mi="31" ci="0" mb="2" cb="0"/><line nr="338" mi="11" ci="0" mb="0" cb="0"/><line nr="341" mi="0" ci="30" mb="0" cb="2"/><line nr="342" mi="0" ci="11" mb="0" cb="0"/><line nr="343" mi="0" ci="31" mb="1" cb="1"/><line nr="344" mi="0" ci="10" mb="0" cb="0"/><line nr="347" mi="0" ci="17" mb="0" cb="0"/><line nr="350" mi="0" ci="10" mb="0" cb="0"/><line nr="351" mi="0" ci="10" mb="0" cb="0"/><line nr="352" mi="0" ci="10" mb="0" cb="0"/><line nr="353" mi="0" ci="10" mb="0" cb="0"/><line nr="354" mi="0" ci="10" mb="0" cb="0"/><line nr="355" mi="0" ci="8" mb="0" cb="0"/><line nr="358" mi="0" ci="12" mb="0" cb="0"/><line nr="359" mi="0" ci="20" mb="0" cb="2"/><line nr="360" mi="0" ci="11" mb="0" cb="0"/><line nr="361" mi="0" ci="12" mb="0" cb="0"/><line nr="363" mi="0" ci="20" mb="0" cb="0"/><line nr="364" mi="0" ci="8" mb="0" cb="0"/><line nr="367" mi="0" ci="10" mb="0" cb="0"/><line nr="368" mi="0" ci="21" mb="0" cb="2"/><line nr="369" mi="0" ci="11" mb="0" cb="0"/><line nr="371" mi="0" ci="18" mb="0" cb="0"/><line nr="376" mi="0" ci="12" mb="0" cb="0"/><line nr="377" mi="0" ci="9" mb="0" cb="0"/><line nr="378" mi="0" ci="8" mb="0" cb="0"/><line nr="389" mi="0" ci="9" mb="0" cb="0"/><line nr="390" mi="0" ci="10" mb="0" cb="0"/><line nr="391" mi="0" ci="10" mb="0" cb="0"/><line nr="392" mi="0" ci="10" mb="0" cb="0"/><line nr="393" mi="0" ci="8" mb="0" cb="0"/><line nr="397" mi="0" ci="22" mb="0" cb="2"/><line nr="398" mi="0" ci="11" mb="0" cb="0"/><line nr="400" mi="0" ci="17" mb="0" cb="0"/><line nr="404" mi="0" ci="12" mb="0" cb="0"/><line nr="405" mi="0" ci="8" mb="0" cb="0"/><line nr="409" mi="0" ci="10" mb="0" cb="0"/><line nr="410" mi="0" ci="8" mb="0" cb="0"/><line nr="414" mi="0" ci="22" mb="0" cb="2"/><line nr="415" mi="0" ci="15" mb="0" cb="0"/><line nr="417" mi="0" ci="20" mb="0" cb="0"/><line nr="419" mi="0" ci="8" mb="0" cb="0"/><line nr="423" mi="0" ci="12" mb="0" cb="0"/><line nr="424" mi="0" ci="8" mb="0" cb="0"/><line nr="428" mi="0" ci="14" mb="0" cb="0"/><line nr="429" mi="0" ci="8" mb="0" cb="0"/><line nr="436" mi="0" ci="9" mb="0" cb="0"/><line nr="437" mi="0" ci="10" mb="0" cb="0"/><line nr="438" mi="0" ci="8" mb="0" cb="0"/><line nr="444" mi="0" ci="9" mb="0" cb="0"/><line nr="445" mi="0" ci="10" mb="0" cb="0"/><line nr="446" mi="0" ci="8" mb="0" cb="0"/><line nr="449" mi="23" ci="31" mb="0" cb="0"/><line nr="450" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2068" covered="3386"/><counter type="BRANCH" missed="16" covered="94"/><counter type="LINE" missed="11" covered="221"/><counter type="COMPLEXITY" missed="45" covered="84"/><counter type="METHOD" missed="30" covered="44"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><sourcefile name="FlowableMinRequest.java"><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="34" mb="0" cb="2"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="18" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="23" mb="1" cb="1"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="65" mi="0" ci="17" mb="0" cb="0"/><line nr="69" mi="0" ci="21" mb="1" cb="1"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="17" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="12" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="10" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="21" mb="0" cb="2"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="22" mb="0" cb="2"/><line nr="108" mi="0" ci="21" mb="0" cb="2"/><line nr="109" mi="0" ci="10" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="20" mb="0" cb="0"/><line nr="113" mi="0" ci="20" mb="0" cb="2"/><line nr="114" mi="0" ci="20" mb="0" cb="2"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="20" mb="0" cb="0"/><line nr="122" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="23" mb="0" cb="2"/><line nr="124" mi="0" ci="13" mb="0" cb="0"/><line nr="127" mi="0" ci="19" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="44" mb="0" cb="4"/><line nr="130" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="46" mb="0" cb="4"/><line nr="134" mi="0" ci="13" mb="0" cb="0"/><line nr="136" mi="0" ci="47" mb="0" cb="4"/><line nr="139" mi="0" ci="35" mb="0" cb="4"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="23" mb="0" cb="0"/><line nr="145" mi="0" ci="12" mb="0" cb="0"/><line nr="148" mi="0" ci="21" mb="0" cb="0"/><line nr="149" mi="0" ci="20" mb="0" cb="2"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="17" mb="0" cb="0"/><line nr="154" mi="0" ci="17" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="0"/><line nr="159" mi="0" ci="20" mb="0" cb="2"/><line nr="160" mi="0" ci="10" mb="0" cb="0"/><line nr="161" mi="0" ci="12" mb="0" cb="0"/><line nr="163" mi="0" ci="19" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="625" covered="1205"/><counter type="BRANCH" missed="4" covered="38"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="10" covered="32"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FlowableDoOnEmpty.java"><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="16" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="23" mb="1" cb="1"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="17" mb="0" cb="0"/><line nr="61" mi="9" ci="12" mb="1" cb="1"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="30" mb="0" cb="2"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="19" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="9" ci="12" mb="1" cb="1"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="19" mb="0" cb="0"/><line nr="89" mi="0" ci="11" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="11" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="344" covered="475"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="39"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="6" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TransformerDecode.java"><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="21" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="25" mb="0" cb="0"/><line nr="35" mi="0" ci="15" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="25" mb="0" cb="0"/><line nr="43" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="9" ci="12" mb="1" cb="1"/><line nr="65" mi="13" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="29" mb="0" cb="2"/><line nr="69" mi="0" ci="20" mb="0" cb="2"/><line nr="71" mi="0" ci="14" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="19" mb="0" cb="0"/><line nr="79" mi="0" ci="29" mb="0" cb="2"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="22" mb="0" cb="0"/><line nr="86" mi="0" ci="16" mb="0" cb="0"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="90" mi="0" ci="21" mb="0" cb="2"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="13" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="30" mb="0" cb="2"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="18" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="21" mb="0" cb="2"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="110" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="472" covered="662"/><counter type="BRANCH" missed="5" covered="19"/><counter type="LINE" missed="3" covered="39"/><counter type="COMPLEXITY" missed="20" covered="27"/><counter type="METHOD" missed="15" covered="20"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="FlowableStateMachine.java"><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="34" mb="0" cb="2"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="26" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="0" ci="10" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="23" mb="1" cb="1"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="17" mb="0" cb="0"/><line nr="118" mi="0" ci="21" mb="0" cb="2"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="30" mb="0" cb="2"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="37" mb="0" cb="2"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="12" mb="0" cb="0"/><line nr="129" mi="0" ci="19" mb="0" cb="0"/><line nr="130" mi="0" ci="18" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="21" mb="0" cb="2"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="17" mb="0" cb="0"/><line nr="143" mi="0" ci="21" mb="0" cb="2"/><line nr="145" mi="0" ci="14" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="10" mb="0" cb="0"/><line nr="152" mi="0" ci="9" mb="0" cb="0"/><line nr="155" mi="0" ci="18" mb="0" cb="0"/><line nr="161" mi="0" ci="21" mb="0" cb="2"/><line nr="162" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="19" mb="0" cb="0"/><line nr="166" mi="0" ci="21" mb="0" cb="2"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="169" mi="0" ci="30" mb="0" cb="2"/><line nr="171" mi="0" ci="14" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="9" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="0" cb="0"/><line nr="175" mi="0" ci="8" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="19" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="21" mb="0" cb="2"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="30" mb="0" cb="2"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="30" mb="0" cb="2"/><line nr="192" mi="0" ci="14" mb="0" cb="0"/><line nr="194" mi="0" ci="18" mb="0" cb="0"/><line nr="196" mi="0" ci="10" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="9" mb="0" cb="0"/><line nr="199" mi="0" ci="10" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="0" ci="21" mb="1" cb="1"/><line nr="207" mi="0" ci="12" mb="0" cb="0"/><line nr="208" mi="0" ci="9" mb="0" cb="0"/><line nr="210" mi="0" ci="17" mb="0" cb="0"/><line nr="214" mi="0" ci="10" mb="0" cb="0"/><line nr="215" mi="0" ci="10" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="0" ci="9" mb="0" cb="0"/><line nr="221" mi="0" ci="8" mb="0" cb="0"/><line nr="225" mi="0" ci="21" mb="0" cb="2"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="228" mi="0" ci="21" mb="0" cb="0"/><line nr="229" mi="0" ci="9" mb="0" cb="0"/><line nr="230" mi="0" ci="8" mb="0" cb="0"/><line nr="234" mi="0" ci="21" mb="0" cb="2"/><line nr="235" mi="0" ci="9" mb="0" cb="0"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="238" mi="0" ci="19" mb="0" cb="0"/><line nr="239" mi="0" ci="10" mb="0" cb="0"/><line nr="240" mi="0" ci="9" mb="0" cb="0"/><line nr="241" mi="0" ci="8" mb="0" cb="0"/><line nr="245" mi="0" ci="21" mb="0" cb="2"/><line nr="246" mi="0" ci="8" mb="0" cb="0"/><line nr="248" mi="0" ci="19" mb="0" cb="0"/><line nr="249" mi="0" ci="9" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="253" mi="0" ci="10" mb="0" cb="0"/><line nr="254" mi="0" ci="21" mb="0" cb="2"/><line nr="255" mi="0" ci="9" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="258" mi="0" ci="11" mb="0" cb="0"/><line nr="259" mi="0" ci="9" mb="0" cb="0"/><line nr="260" mi="0" ci="22" mb="0" cb="2"/><line nr="261" mi="0" ci="21" mb="0" cb="2"/><line nr="262" mi="0" ci="8" mb="0" cb="0"/><line nr="264" mi="0" ci="19" mb="0" cb="0"/><line nr="265" mi="0" ci="11" mb="0" cb="0"/><line nr="266" mi="0" ci="20" mb="0" cb="2"/><line nr="267" mi="0" ci="20" mb="0" cb="2"/><line nr="268" mi="0" ci="10" mb="0" cb="0"/><line nr="269" mi="0" ci="20" mb="0" cb="2"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="10" mb="0" cb="0"/><line nr="272" mi="0" ci="12" mb="0" cb="0"/><line nr="274" mi="0" ci="18" mb="0" cb="0"/><line nr="275" mi="0" ci="10" mb="0" cb="0"/><line nr="276" mi="0" ci="10" mb="0" cb="0"/><line nr="278" mi="0" ci="8" mb="0" cb="0"/><line nr="283" mi="0" ci="20" mb="0" cb="0"/><line nr="284" mi="0" ci="11" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="0" ci="46" mb="0" cb="4"/><line nr="288" mi="0" ci="13" mb="0" cb="0"/><line nr="290" mi="0" ci="44" mb="1" cb="3"/><line nr="291" mi="0" ci="10" mb="0" cb="0"/><line nr="292" mi="0" ci="13" mb="0" cb="0"/><line nr="294" mi="0" ci="21" mb="0" cb="0"/><line nr="295" mi="0" ci="20" mb="0" cb="2"/><line nr="296" mi="0" ci="8" mb="0" cb="0"/><line nr="298" mi="0" ci="17" mb="0" cb="0"/><line nr="300" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1072" covered="2043"/><counter type="BRANCH" missed="5" covered="55"/><counter type="LINE" missed="0" covered="148"/><counter type="COMPLEXITY" missed="11" covered="44"/><counter type="METHOD" missed="6" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FlowableStringSplitSimple.java"><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="10" ci="24" mb="1" cb="1"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="16" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="13" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="13" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="21" mb="0" cb="2"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="24" mb="0" cb="2"/><line nr="77" mi="0" ci="22" mb="0" cb="2"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="20" mb="0" cb="0"/><line nr="84" mi="0" ci="18" mb="0" cb="0"/><line nr="86" mi="0" ci="17" mb="0" cb="0"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="22" mb="0" cb="2"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="18" mb="0" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="22" mb="0" cb="2"/><line nr="116" mi="0" ci="21" mb="0" cb="2"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="30" mb="0" cb="2"/><line nr="120" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="19" mb="0" cb="0"/><line nr="124" mi="0" ci="12" mb="0" cb="0"/><line nr="125" mi="0" ci="20" mb="0" cb="2"/><line nr="126" mi="0" ci="20" mb="0" cb="2"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="20" mb="0" cb="2"/><line nr="129" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="20" mb="0" cb="0"/><line nr="135" mi="0" ci="20" mb="0" cb="2"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="137" mi="0" ci="10" mb="0" cb="0"/><line nr="138" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="141" mi="0" ci="31" mb="0" cb="2"/><line nr="142" mi="0" ci="10" mb="0" cb="0"/><line nr="143" mi="0" ci="10" mb="0" cb="0"/><line nr="144" mi="0" ci="11" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="10" mb="0" cb="0"/><line nr="148" mi="0" ci="18" mb="0" cb="0"/><line nr="150" mi="0" ci="34" mb="1" cb="3"/><line nr="151" mi="0" ci="19" mb="0" cb="0"/><line nr="153" mi="0" ci="17" mb="0" cb="0"/><line nr="155" mi="0" ci="30" mb="0" cb="2"/><line nr="156" mi="0" ci="12" mb="0" cb="0"/><line nr="160" mi="0" ci="20" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="46" mb="0" cb="4"/><line nr="165" mi="0" ci="12" mb="0" cb="0"/><line nr="167" mi="0" ci="22" mb="0" cb="0"/><line nr="168" mi="0" ci="20" mb="0" cb="2"/><line nr="169" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="17" mb="0" cb="0"/><line nr="180" mi="9" ci="12" mb="1" cb="1"/><line nr="181" mi="9" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="20" mb="0" cb="0"/><line nr="184" mi="0" ci="20" mb="0" cb="2"/><line nr="185" mi="0" ci="11" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="0"/><line nr="188" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="747" covered="1365"/><counter type="BRANCH" missed="5" covered="41"/><counter type="LINE" missed="1" covered="93"/><counter type="COMPLEXITY" missed="11" covered="33"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FlowableMapLast.java"><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="10" mb="0" cb="0"/><line nr="20" mi="0" ci="10" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="16" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="34" mi="0" ci="13" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="23" mb="1" cb="1"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="17" mb="0" cb="0"/><line nr="57" mi="9" ci="12" mb="1" cb="1"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="31" mb="0" cb="2"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="21" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="9" ci="12" mb="1" cb="1"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="31" mb="1" cb="1"/><line nr="76" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="19" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="9" ci="12" mb="1" cb="1"/><line nr="92" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="31" mb="1" cb="1"/><line nr="95" mi="0" ci="12" mb="0" cb="0"/><line nr="97" mi="0" ci="19" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="10" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="21" mb="1" cb="1"/><line nr="109" mi="0" ci="24" mb="0" cb="2"/><line nr="110" mi="0" ci="11" mb="0" cb="0"/><line nr="111" mi="0" ci="22" mb="0" cb="2"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="20" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="0" ci="20" mb="0" cb="0"/><line nr="119" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="501" covered="726"/><counter type="BRANCH" missed="9" covered="15"/><counter type="LINE" missed="5" covered="51"/><counter type="COMPLEXITY" missed="16" covered="15"/><counter type="METHOD" missed="7" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FlowableMaxRequest.java"><line nr="20" mi="0" ci="9" mb="0" cb="0"/><line nr="21" mi="10" ci="26" mb="1" cb="1"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="16" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="23" mb="1" cb="1"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="17" mb="0" cb="0"/><line nr="73" mi="0" ci="21" mb="1" cb="1"/><line nr="74" mi="0" ci="12" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="17" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="23" mb="0" cb="2"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="88" mi="0" ci="23" mb="0" cb="2"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="22" mb="0" cb="2"/><line nr="93" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="21" mb="0" cb="0"/><line nr="98" mi="0" ci="32" mb="0" cb="2"/><line nr="104" mi="0" ci="11" mb="0" cb="0"/><line nr="105" mi="0" ci="22" mb="0" cb="2"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="31" mb="0" cb="2"/><line nr="112" mi="0" ci="11" mb="0" cb="0"/><line nr="113" mi="0" ci="12" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="0" ci="21" mb="0" cb="0"/><line nr="117" mi="0" ci="26" mb="0" cb="2"/><line nr="118" mi="0" ci="10" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="17" mb="0" cb="0"/><line nr="126" mi="0" ci="20" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="11" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="10" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="21" mb="0" cb="2"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="0" ci="30" mb="0" cb="2"/><line nr="147" mi="0" ci="11" mb="0" cb="0"/><line nr="148" mi="0" ci="12" mb="0" cb="0"/><line nr="149" mi="0" ci="22" mb="0" cb="2"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="50" mb="1" cb="3"/><line nr="152" mi="0" ci="19" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="11" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="17" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="21" mb="0" cb="0"/><line nr="160" mi="0" ci="20" mb="0" cb="2"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="565" covered="1036"/><counter type="BRANCH" missed="6" covered="30"/><counter type="LINE" missed="1" covered="68"/><counter type="COMPLEXITY" missed="12" covered="26"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TransformerStringSplit.java"><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="29" mb="0" cb="0"/><line nr="29" mi="0" ci="20" mb="0" cb="2"/><line nr="30" mi="0" ci="16" mb="0" cb="0"/><line nr="34" mi="0" ci="30" mb="0" cb="2"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="37" mi="0" ci="22" mb="0" cb="0"/><line nr="42" mi="0" ci="35" mb="0" cb="2"/><line nr="43" mi="9" ci="12" mb="1" cb="1"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="21" mb="0" cb="0"/><line nr="52" mi="0" ci="23" mb="0" cb="0"/><line nr="56" mi="0" ci="21" mb="0" cb="0"/><line nr="60" mi="0" ci="34" mb="1" cb="3"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="30" mb="1" cb="1"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="18" mb="0" cb="0"/><line nr="68" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="275" covered="428"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="14" covered="17"/><counter type="METHOD" missed="9" covered="12"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="FlowableServerSocket.java"><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="13" mb="0" cb="0"/><line nr="33" mi="0" ci="18" mb="0" cb="0"/><line nr="34" mi="0" ci="13" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="29" mb="0" cb="0"/><line nr="52" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="37" mb="0" cb="0"/><line nr="69" mi="0" ci="19" mb="0" cb="0"/><line nr="77" mi="0" ci="17" mb="0" cb="0"/><line nr="78" mi="0" ci="25" mb="0" cb="0"/><line nr="81" mi="0" ci="19" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="22" mb="0" cb="2"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="22" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="11" ci="28" mb="2" cb="2"/><line nr="107" mi="21" ci="0" mb="2" cb="0"/><line nr="108" mi="0" ci="17" mb="0" cb="0"/><line nr="111" mi="19" ci="0" mb="0" cb="0"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="16" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="8" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="24" mb="0" cb="0"/><line nr="130" mi="0" ci="13" mb="0" cb="0"/><line nr="133" mi="0" ci="11" mb="0" cb="0"/><line nr="136" mi="0" ci="13" mb="0" cb="0"/><line nr="139" mi="0" ci="12" mb="0" cb="0"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="0" cb="0"/><line nr="150" mi="12" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="645" covered="720"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="6" covered="44"/><counter type="COMPLEXITY" missed="30" covered="38"/><counter type="METHOD" missed="21" covered="36"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><counter type="INSTRUCTION" missed="11267" covered="18166"/><counter type="BRANCH" missed="110" covered="492"/><counter type="LINE" missed="51" covered="1193"/><counter type="COMPLEXITY" missed="303" covered="523"/><counter type="METHOD" missed="197" covered="328"/><counter type="CLASS" missed="0" covered="60"/></package><package name="com/github/davidmoten/rx2/internal/flowable/buffertofile"><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue$MessageType"><method name="values" desc="()[Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue$MessageType;" line="201"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue$MessageType;" line="201"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;II)V" line="207"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()B" line="212"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(B)Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue$MessageType;" line="216"><counter type="INSTRUCTION" missed="21" covered="71"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="201"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="160" covered="166"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/Pages"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;I)V" line="22"><counter type="INSTRUCTION" missed="20" covered="101"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="avail" desc="()I" line="41"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markForRewriteAndAdvance4Bytes" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putInt" desc="(I)V" line="52"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putInt" desc="(Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/Page;I)V" line="61"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="([BII)V" line="66"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIntOrderedAtRewriteMark" desc="(I)V" line="81"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writePage" desc="()Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/Page;" line="86"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNewPage" desc="()V" line="95"><counter type="INSTRUCTION" missed="20" covered="68"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="()I" line="108"><counter type="INSTRUCTION" missed="18" covered="57"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)[B" line="122"><counter type="INSTRUCTION" missed="18" covered="70"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readPage" desc="()Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/Page;" line="137"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putByte" desc="(B)V" line="148"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByte" desc="()B" line="159"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveReadPosition" desc="(I)V" line="171"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntVolatile" desc="()I" line="175"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveWritePosition" desc="(I)V" line="185"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="190"><counter type="INSTRUCTION" missed="19" covered="85"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="519" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="633" covered="1023"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="5" covered="71"/><counter type="COMPLEXITY" missed="9" covered="27"/><counter type="METHOD" missed="3" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/Page"><method name="&lt;init&gt;" desc="(Ljava/io/File;I)V" line="13"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(I[BII)V" line="26"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIntOrdered" desc="(II)V" line="32"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putInt" desc="(II)V" line="38"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="([BIII)V" line="44"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntVolatile" desc="(I)I" line="48"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="println" desc="(Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="avail" desc="(I)I" line="63"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(I)I" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putByte" desc="(IB)V" line="71"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByte" desc="(I)B" line="75"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="166" covered="308"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="3" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/FlowableOnBackpressureBufferToFile$BufferToFileSubscriberFlowable"><method name="&lt;init&gt;" desc="(Lorg/reactivestreams/Subscriber;Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue;Lcom/github/davidmoten/rx2/buffertofile/Serializer;Lio/reactivex/Scheduler$Worker;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lorg/reactivestreams/Subscription;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="78"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="87"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="106"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancelUpstream" desc="()V" line="111"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="176" covered="286"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/FlowableOnBackpressureBufferToFile$BufferToFileSubscriber"><method name="&lt;init&gt;" desc="(Lorg/reactivestreams/Subscriber;Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue;Lcom/github/davidmoten/rx2/buffertofile/Serializer;Lio/reactivex/Scheduler$Worker;)V" line="178"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="210"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="216"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scheduleDrain" desc="()V" line="225"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="232"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="drain" desc="()V" line="240"><counter type="INSTRUCTION" missed="0" covered="628"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancelNow" desc="()V" line="310"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="532" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="551" covered="973"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="78"/><counter type="COMPLEXITY" missed="4" covered="21"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/UnsafeAccess"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unsafe" desc="()Lsun/misc/Unsafe;" line="27"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="20" covered="52"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="91"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/SerializerBytes"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="([B)[B" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="([B)[B" line="16"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/SerializerJavaIO"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serialize" desc="(Ljava/io/Serializable;)[B" line="16"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="([B)Ljava/io/Serializable;" line="25"><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="104" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="208"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/MemoryMappedFile"><method name="&lt;init&gt;" desc="(Ljava/io/File;J)V" line="33"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethod" desc="(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" line="44"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="roundTo4096" desc="(J)J" line="54"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapAndSetOffset" desc="()V" line="61"><counter type="INSTRUCTION" missed="20" covered="103"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="83"><counter type="INSTRUCTION" missed="89" covered="65"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInt" desc="(J)I" line="97"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putByte" desc="(JB)V" line="101"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putInt" desc="(JI)V" line="105"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putOrderedInt" desc="(JI)V" line="109"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIntVolatile" desc="(J)I" line="113"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBytes" desc="(J[BJJ)V" line="118"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putBytes" desc="(J[BJJ)V" line="122"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getByte" desc="(J)B" line="126"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="314" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="442" covered="562"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="9" covered="42"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="3" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/FlowableOnBackpressureBufferToFile$BufferToFileSubscriberObservable"><method name="&lt;init&gt;" desc="(Lorg/reactivestreams/Subscriber;Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue;Lcom/github/davidmoten/rx2/buffertofile/Serializer;Lio/reactivex/Scheduler$Worker;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onSubscribe" desc="(Lio/reactivex/disposables/Disposable;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onNext" desc="(Ljava/lang/Object;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onError" desc="(Ljava/lang/Throwable;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onComplete" desc="()V" line="144"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancelUpstream" desc="()V" line="149"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="request" desc="(J)V" line="154"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cancel" desc="()V" line="162"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="134" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="153" covered="243"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/Callable;I)V" line="31"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offer" desc="([B)V" line="36"><counter type="INSTRUCTION" missed="17" covered="201"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeFullMessage" desc="([BI)V" line="60"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeFragments" desc="([BI)V" line="64"><counter type="INSTRUCTION" missed="0" covered="254"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fullMessageSize" desc="(II)I" line="86"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="padding" desc="(I)I" line="90"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="([BIIILcom/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue$MessageType;I)V" line="102"><counter type="INSTRUCTION" missed="10" covered="250"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="poll" desc="()[B" line="129"><counter type="INSTRUCTION" missed="18" covered="593"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="1" covered="35"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeWrite" desc="()V" line="188"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="196"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="726" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="791" covered="1574"/><counter type="BRANCH" missed="7" covered="51"/><counter type="LINE" missed="2" covered="96"/><counter type="COMPLEXITY" missed="10" covered="34"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/flowable/buffertofile/FlowableOnBackpressureBufferToFile"><method name="&lt;init&gt;" desc="(Lio/reactivex/Flowable;Lio/reactivex/Observable;Lcom/github/davidmoten/rx2/buffertofile/Options;Lcom/github/davidmoten/rx2/buffertofile/Serializer;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="118"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subscribeActual" desc="(Lorg/reactivestreams/Subscriber;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="(Lcom/github/davidmoten/rx2/internal/flowable/buffertofile/PagedQueue;)V" line="323"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="132" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="151" covered="288"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SerializerJavaIO.java"><line nr="12" mi="0" ci="10" mb="0" cb="0"/><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="12" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="10" mb="0" cb="0"/><line nr="25" mi="0" ci="12" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="12" mb="0" cb="0"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="27" mb="0" cb="0"/><line nr="33" mi="0" ci="30" mb="1" cb="3"/><line nr="34" mi="0" ci="29" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="208"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SerializerBytes.java"><line nr="7" mi="0" ci="10" mb="0" cb="0"/><line nr="11" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="44"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnsafeAccess.java"><line nr="10" mi="0" ci="9" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="19" mi="0" ci="10" mb="0" cb="0"/><line nr="20" mi="0" ci="12" mb="0" cb="0"/><line nr="21" mi="8" ci="0" mb="0" cb="0"/><line nr="22" mi="12" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="91"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Page.java"><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="14" mi="0" ci="10" mb="0" cb="0"/><line nr="15" mi="0" ci="15" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="10" mb="0" cb="0"/><line nr="26" mi="0" ci="17" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="13" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="13" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="17" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="13" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="20" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="71" mi="0" ci="13" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="166" covered="308"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="3" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MemoryMappedFile.java"><line nr="27" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="25" mb="0" cb="0"/><line nr="29" mi="0" ci="21" mb="0" cb="0"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="11" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="13" mb="0" cb="0"/><line nr="61" mi="0" ci="14" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="32" mb="0" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="12" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="25" mb="0" cb="0"/><line nr="84" mi="9" ci="13" mb="1" cb="1"/><line nr="85" mi="20" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="12" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="17" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="14" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="14" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="15" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="15" mb="0" cb="0"/><line nr="118" mi="0" ci="20" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="0" ci="20" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="442" covered="562"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="9" covered="42"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="3" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PagedQueue.java"><line nr="14" mi="1" ci="14" mb="1" cb="1"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="14" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="9" ci="12" mb="1" cb="1"/><line nr="37" mi="8" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="20" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="13" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="20" mb="0" cb="2"/><line nr="47" mi="0" ci="21" mb="0" cb="2"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="21" mb="0" cb="0"/><line nr="52" mi="0" ci="20" mb="0" cb="0"/><line nr="55" mi="0" ci="23" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="17" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="42" mb="0" cb="2"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="0"/><line nr="70" mi="0" ci="19" mb="0" cb="0"/><line nr="71" mi="0" ci="21" mb="0" cb="2"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="25" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="20" mb="0" cb="2"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="29" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="13" mb="0" cb="0"/><line nr="90" mi="0" ci="15" mb="0" cb="0"/><line nr="92" mi="0" ci="20" mb="0" cb="2"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="20" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="102" mi="10" ci="23" mb="1" cb="1"/><line nr="103" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="34" mb="1" cb="3"/><line nr="108" mi="0" ci="22" mb="0" cb="0"/><line nr="110" mi="0" ci="21" mb="0" cb="0"/><line nr="111" mi="0" ci="12" mb="0" cb="0"/><line nr="112" mi="0" ci="20" mb="0" cb="2"/><line nr="113" mi="0" ci="11" mb="0" cb="0"/><line nr="116" mi="0" ci="43" mb="0" cb="4"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="22" mb="0" cb="0"/><line nr="123" mi="0" ci="11" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="20" mb="0" cb="2"/><line nr="132" mi="0" ci="11" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="0"/><line nr="134" mi="0" ci="30" mb="0" cb="2"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="141" mi="0" ci="44" mb="1" cb="3"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="11" mb="0" cb="0"/><line nr="145" mi="0" ci="14" mb="0" cb="0"/><line nr="146" mi="0" ci="21" mb="0" cb="2"/><line nr="147" mi="0" ci="13" mb="0" cb="0"/><line nr="149" mi="0" ci="17" mb="0" cb="0"/><line nr="151" mi="0" ci="21" mb="0" cb="0"/><line nr="152" mi="0" ci="11" mb="0" cb="0"/><line nr="153" mi="0" ci="20" mb="0" cb="2"/><line nr="154" mi="0" ci="11" mb="0" cb="0"/><line nr="157" mi="0" ci="44" mb="0" cb="4"/><line nr="159" mi="0" ci="11" mb="0" cb="0"/><line nr="160" mi="0" ci="21" mb="1" cb="1"/><line nr="161" mi="0" ci="11" mb="0" cb="0"/><line nr="162" mi="0" ci="10" mb="0" cb="0"/><line nr="164" mi="0" ci="19" mb="0" cb="0"/><line nr="166" mi="0" ci="21" mb="0" cb="0"/><line nr="167" mi="9" ci="12" mb="1" cb="1"/><line nr="168" mi="9" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="30" mb="0" cb="2"/><line nr="171" mi="0" ci="16" mb="0" cb="0"/><line nr="172" mi="0" ci="14" mb="0" cb="0"/><line nr="173" mi="0" ci="24" mb="0" cb="2"/><line nr="174" mi="0" ci="10" mb="0" cb="0"/><line nr="175" mi="0" ci="10" mb="0" cb="0"/><line nr="176" mi="0" ci="10" mb="0" cb="0"/><line nr="177" mi="0" ci="9" mb="0" cb="0"/><line nr="180" mi="0" ci="18" mb="0" cb="0"/><line nr="184" mi="0" ci="17" mb="0" cb="0"/><line nr="188" mi="0" ci="10" mb="0" cb="0"/><line nr="189" mi="0" ci="23" mb="0" cb="2"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="17" mb="0" cb="0"/><line nr="196" mi="0" ci="9" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="0"/><line nr="198" mi="0" ci="10" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="23" ci="19" mb="0" cb="0"/><line nr="203" mi="0" ci="21" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="0"/><line nr="208" mi="0" ci="11" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="0"/><line nr="212" mi="0" ci="10" mb="0" cb="0"/><line nr="216" mi="0" ci="20" mb="0" cb="2"/><line nr="217" mi="0" ci="9" mb="0" cb="0"/><line nr="218" mi="0" ci="30" mb="1" cb="1"/><line nr="219" mi="0" ci="9" mb="0" cb="0"/><line nr="221" mi="21" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="951" covered="1740"/><counter type="BRANCH" missed="8" covered="56"/><counter type="LINE" missed="3" covered="106"/><counter type="COMPLEXITY" missed="16" covered="41"/><counter type="METHOD" missed="8" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FlowableOnBackpressureBufferToFile.java"><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="59" mb="0" cb="4"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="17" mb="0" cb="0"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="0" ci="21" mb="0" cb="2"/><line nr="47" mi="0" ci="19" mb="0" cb="0"/><line nr="50" mi="0" ci="27" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="13" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="23" mb="1" cb="1"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="17" mb="0" cb="0"/><line nr="78" mi="0" ci="21" mb="1" cb="1"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="17" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="21" mb="1" cb="1"/><line nr="155" mi="0" ci="12" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="158" mi="0" ci="17" mb="0" cb="0"/><line nr="162" mi="0" ci="10" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="166" mi="0" ci="9" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="12" mb="0" cb="0"/><line nr="188" mi="0" ci="9" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="0" cb="0"/><line nr="190" mi="0" ci="10" mb="0" cb="0"/><line nr="191" mi="0" ci="10" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="14" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="9" mb="0" cb="0"/><line nr="200" mi="0" ci="10" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="0"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="10" mb="0" cb="0"/><line nr="212" mi="0" ci="9" mb="0" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="216" mi="0" ci="10" mb="0" cb="0"/><line nr="217" mi="0" ci="9" mb="0" cb="0"/><line nr="218" mi="0" ci="8" mb="0" cb="0"/><line nr="225" mi="0" ci="21" mb="0" cb="2"/><line nr="226" mi="0" ci="12" mb="0" cb="0"/><line nr="228" mi="0" ci="17" mb="0" cb="0"/><line nr="232" mi="0" ci="9" mb="0" cb="0"/><line nr="233" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="21" mb="0" cb="2"/><line nr="241" mi="0" ci="10" mb="0" cb="0"/><line nr="242" mi="0" ci="10" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="0"/><line nr="245" mi="0" ci="18" mb="0" cb="0"/><line nr="247" mi="0" ci="11" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="0"/><line nr="249" mi="0" ci="22" mb="0" cb="2"/><line nr="250" mi="0" ci="21" mb="0" cb="2"/><line nr="251" mi="0" ci="10" mb="0" cb="0"/><line nr="252" mi="0" ci="10" mb="0" cb="0"/><line nr="253" mi="0" ci="8" mb="0" cb="0"/><line nr="257" mi="0" ci="19" mb="0" cb="0"/><line nr="261" mi="0" ci="34" mb="0" cb="4"/><line nr="262" mi="0" ci="9" mb="0" cb="0"/><line nr="263" mi="0" ci="12" mb="0" cb="0"/><line nr="264" mi="0" ci="8" mb="0" cb="0"/><line nr="268" mi="0" ci="20" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="0"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="271" mi="0" ci="9" mb="0" cb="0"/><line nr="272" mi="0" ci="11" mb="0" cb="0"/><line nr="273" mi="0" ci="8" mb="0" cb="0"/><line nr="274" mi="0" ci="8" mb="0" cb="0"/><line nr="275" mi="0" ci="20" mb="0" cb="2"/><line nr="280" mi="0" ci="19" mb="0" cb="0"/><line nr="281" mi="0" ci="9" mb="0" cb="0"/><line nr="283" mi="0" ci="8" mb="0" cb="0"/><line nr="284" mi="0" ci="9" mb="0" cb="0"/><line nr="285" mi="0" ci="9" mb="0" cb="0"/><line nr="286" mi="0" ci="11" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="8" mb="0" cb="0"/><line nr="289" mi="0" ci="11" mb="0" cb="0"/><line nr="290" mi="0" ci="11" mb="0" cb="0"/><line nr="291" mi="0" ci="30" mb="0" cb="2"/><line nr="292" mi="0" ci="9" mb="0" cb="0"/><line nr="293" mi="0" ci="10" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="0"/><line nr="298" mi="0" ci="8" mb="0" cb="0"/><line nr="299" mi="0" ci="46" mb="0" cb="4"/><line nr="300" mi="0" ci="13" mb="0" cb="0"/><line nr="302" mi="0" ci="21" mb="0" cb="0"/><line nr="303" mi="0" ci="20" mb="0" cb="2"/><line nr="304" mi="0" ci="8" mb="0" cb="0"/><line nr="306" mi="0" ci="17" mb="0" cb="0"/><line nr="310" mi="0" ci="10" mb="0" cb="0"/><line nr="311" mi="0" ci="9" mb="0" cb="0"/><line nr="312" mi="0" ci="10" mb="0" cb="0"/><line nr="313" mi="0" ci="10" mb="0" cb="0"/><line nr="314" mi="0" ci="8" mb="0" cb="0"/><line nr="323" mi="0" ci="9" mb="0" cb="0"/><line nr="324" mi="0" ci="8" mb="0" cb="0"/><line nr="325" mi="0" ci="9" mb="0" cb="0"/><line nr="326" mi="0" ci="9" mb="0" cb="0"/><line nr="327" mi="0" ci="8" mb="0" cb="0"/><line nr="328" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1031" covered="1790"/><counter type="BRANCH" missed="6" covered="36"/><counter type="LINE" missed="0" covered="141"/><counter type="COMPLEXITY" missed="18" covered="50"/><counter type="METHOD" missed="12" covered="35"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Pages.java"><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="22" mi="0" ci="13" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="10" ci="24" mb="1" cb="1"/><line nr="35" mi="10" ci="25" mb="1" cb="1"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="13" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="13" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="0" ci="13" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="14" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="13" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="37" mb="0" cb="4"/><line nr="87" mi="0" ci="18" mb="0" cb="0"/><line nr="89" mi="0" ci="19" mb="0" cb="0"/><line nr="95" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="97" mi="12" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="15" mb="0" cb="0"/><line nr="100" mi="0" ci="10" mb="0" cb="0"/><line nr="101" mi="0" ci="13" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="9" ci="12" mb="1" cb="1"/><line nr="109" mi="9" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="19" mb="0" cb="0"/><line nr="117" mi="0" ci="12" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="123" mi="9" ci="12" mb="1" cb="1"/><line nr="124" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="24" mb="0" cb="0"/><line nr="132" mi="0" ci="13" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="0" ci="37" mb="0" cb="4"/><line nr="138" mi="0" ci="30" mb="0" cb="2"/><line nr="139" mi="0" ci="10" mb="0" cb="0"/><line nr="141" mi="0" ci="22" mb="0" cb="0"/><line nr="142" mi="0" ci="14" mb="0" cb="0"/><line nr="144" mi="0" ci="19" mb="0" cb="0"/><line nr="148" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="12" mb="0" cb="0"/><line nr="155" mi="0" ci="13" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="0" ci="12" mb="0" cb="0"/><line nr="166" mi="0" ci="13" mb="0" cb="0"/><line nr="167" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="13" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="175" mi="0" ci="21" mb="0" cb="2"/><line nr="176" mi="0" ci="9" mb="0" cb="0"/><line nr="178" mi="0" ci="22" mb="0" cb="0"/><line nr="179" mi="0" ci="13" mb="0" cb="0"/><line nr="180" mi="0" ci="9" mb="0" cb="0"/><line nr="185" mi="0" ci="13" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="21" mb="0" cb="2"/><line nr="191" mi="0" ci="10" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="195" mi="9" ci="25" mb="1" cb="1"/><line nr="196" mi="10" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="633" covered="1023"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="5" covered="71"/><counter type="COMPLEXITY" missed="9" covered="27"/><counter type="METHOD" missed="3" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3500" covered="5766"/><counter type="BRANCH" missed="24" covered="124"/><counter type="LINE" missed="19" covered="408"/><counter type="COMPLEXITY" missed="62" covered="166"/><counter type="METHOD" missed="38" covered="116"/><counter type="CLASS" missed="0" covered="12"/></package><package name="com/github/davidmoten/rx2/internal"><class name="com/github/davidmoten/rx2/internal/SchedulerWithId$1$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/internal/SchedulerWithId$1;Ljava/lang/Runnable;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()V" line="32"><counter type="INSTRUCTION" missed="33" covered="81"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="109"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/SchedulerWithId"><method name="&lt;init&gt;" desc="(Lio/reactivex/Scheduler;Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createWorker" desc="()Lio/reactivex/Scheduler$Worker;" line="24"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setThreadName" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateNameWithId" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="49" covered="82"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="133" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="201" covered="230"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/internal/SchedulerWithId$1"><method name="&lt;init&gt;" desc="(Lcom/github/davidmoten/rx2/internal/SchedulerWithId;Lio/reactivex/Scheduler$Worker;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="schedule" desc="(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/disposables/Disposable;" line="29"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDisposed" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="90"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SchedulerWithId.java"><line nr="14" mi="0" ci="11" mb="0" cb="0"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="0" ci="10" mb="0" cb="0"/><line nr="18" mi="0" ci="19" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="11" mb="0" cb="0"/><line nr="25" mi="0" ci="29" mb="0" cb="0"/><line nr="29" mi="0" ci="29" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="34" mi="0" ci="12" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="21" ci="20" mb="3" cb="1"/><line nr="38" mi="12" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="17" mb="0" cb="0"/><line nr="43" mi="0" ci="14" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="9" ci="11" mb="1" cb="1"/><line nr="71" mi="10" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="20" mb="0" cb="0"/><line nr="74" mi="9" ci="12" mb="1" cb="1"/><line nr="75" mi="21" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="27" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="361" covered="429"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="15" covered="17"/><counter type="METHOD" missed="9" covered="16"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="361" covered="429"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="15" covered="17"/><counter type="METHOD" missed="9" covered="16"/><counter type="CLASS" missed="0" covered="3"/></package><package name="com/github/davidmoten/rx2/exceptions"><class name="com/github/davidmoten/rx2/exceptions/AssertionException"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/github/davidmoten/rx2/exceptions/ThrowingException"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ThrowingException.java"><line nr="3" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AssertionException.java"><line nr="8" mi="0" ci="10" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="62" covered="52"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="26425" covered="37727"/><counter type="BRANCH" missed="304" covered="910"/><counter type="LINE" missed="146" covered="2372"/><counter type="COMPLEXITY" missed="1114" covered="1588"/><counter type="METHOD" missed="821" covered="1274"/><counter type="CLASS" missed="5" covered="243"/></report>