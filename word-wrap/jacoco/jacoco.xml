<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="word-wrap"><sessioninfo id="hp-6b234f7a" start="1530923208040" dump="1530923209146"/><sessioninfo id="hp-f213ff77" start="1530924156774" dump="1530924158352"/><package name="org/davidmoten/text/utils"><class name="org/davidmoten/text/utils/CharSequenceReader"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkOpen" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasRemaining" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remaining" desc="()I" line="50"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/nio/CharBuffer;)I" line="55"><counter type="INSTRUCTION" missed="0" covered="143"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="([CII)I" line="75"><counter type="INSTRUCTION" missed="0" covered="213"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="skip" desc="(J)J" line="91"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ready" desc="()Z" line="100"><counter type="INSTRUCTION" missed="18" covered="2"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markSupported" desc="()Z" line="106"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(I)V" line="111"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="124"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="339" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="376" covered="766"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="4" covered="27"/><counter type="METHOD" missed="3" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/WordWrap"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/Reader;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="38"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromClasspathUtf8" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="42"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClasspath" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="46"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/io/Reader;Z)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="51"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/CharSequence;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="55"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromUtf8" desc="(Ljava/io/InputStream;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="59"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="63"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="68"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSet" desc="(Ljava/lang/String;)Ljava/util/Set;" line="179"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wordWrap" desc="(Ljava/io/Reader;Ljava/io/Writer;Ljava/lang/String;Ljava/lang/Number;Ljava/util/function/Function;Ljava/util/Set;Z)V" line="189"><counter type="INSTRUCTION" missed="51" covered="1010"/><counter type="BRANCH" missed="3" covered="47"/><counter type="LINE" missed="2" covered="55"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concatRightTrim" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="271"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPunctuation" desc="(C)Z" line="275"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tooLong" desc="(Ljava/util/function/Function;Ljava/lang/CharSequence;D)Z" line="280"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rightTrim" desc="(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;" line="285"><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWhitespace" desc="(Ljava/lang/CharSequence;)Z" line="301"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftTrim" desc="(Ljava/lang/StringBuilder;)V" line="314"><counter type="INSTRUCTION" missed="0" covered="149"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftTrim" desc="(Ljava/lang/String;)Ljava/lang/String;" line="325"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="appendWordToLine" desc="(Ljava/lang/StringBuilder;Ljava/lang/StringBuilder;)V" line="331"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeBrokenWord" desc="(Ljava/io/Writer;Ljava/lang/StringBuilder;Ljava/lang/String;Z)V" line="340"><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeLine" desc="(Ljava/io/Writer;Ljava/lang/StringBuilder;Ljava/lang/String;)V" line="358"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/CharSequence;)Ljava/lang/Number;" line="33"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="958" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1117" covered="2024"/><counter type="BRANCH" missed="6" covered="78"/><counter type="LINE" missed="8" covered="110"/><counter type="COMPLEXITY" missed="13" covered="56"/><counter type="METHOD" missed="7" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/CharSequenceConcatRightTrim"><method name="&lt;init&gt;" desc="(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="15"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charAt" desc="(I)C" line="24"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subSequence" desc="(II)Ljava/lang/CharSequence;" line="33"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="131" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="150" covered="298"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/CharSequenceConcatRightTrim$1"><method name="&lt;init&gt;" desc="(Lorg/davidmoten/text/utils/CharSequenceConcatRightTrim;II)V" line="33"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="length" desc="()I" line="37"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="charAt" desc="(I)C" line="42"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subSequence" desc="(II)Ljava/lang/CharSequence;" line="48"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="116" covered="229"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/WordWrap$Builder"><method name="&lt;init&gt;" desc="(Ljava/io/Reader;Z)V" line="78"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxWidth" desc="(Ljava/lang/Number;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="90"><counter type="INSTRUCTION" missed="10" covered="47"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringWidth" desc="(Ljava/util/function/Function;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="96"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newLine" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="101"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wordChars" desc="(Ljava/util/Set;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="106"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wordChars" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="111"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="includeWordChars" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="115"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludeWordChars" desc="(Ljava/lang/String;)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="121"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertHyphens" desc="(Z)Lorg/davidmoten/text/utils/WordWrap$Builder;" line="127"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/io/Writer;)V" line="133"><counter type="INSTRUCTION" missed="98" covered="79"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/io/File;Ljava/nio/charset/Charset;)V" line="148"><counter type="INSTRUCTION" missed="93" covered="91"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapUtf8" desc="(Ljava/io/File;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrapUtf8" desc="(Ljava/lang/String;)V" line="160"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="wrap" desc="(Ljava/lang/String;Ljava/nio/charset/Charset;)V" line="164"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrap" desc="()Ljava/lang/String;" line="168"><counter type="INSTRUCTION" missed="95" covered="88"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="393" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="729" covered="613"/><counter type="BRANCH" missed="17" covered="7"/><counter type="LINE" missed="9" covered="45"/><counter type="COMPLEXITY" missed="16" covered="16"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/davidmoten/text/utils/IORuntimeException"><method name="&lt;init&gt;" desc="(Ljava/io/IOException;)V" line="10"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_init" desc="()V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap_0" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_classmap" desc="(Lnet/sourceforge/cobertura/coveragedata/LightClassmapListener;)V"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="__cobertura_get_and_reset_counters" desc="()[I"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="CharSequenceReader.java"><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="12" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="21" mb="0" cb="2"/><line nr="41" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="0" ci="17" mb="0" cb="0"/><line nr="46" mi="0" ci="34" mb="0" cb="2"/><line nr="50" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="21" mb="0" cb="2"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="22" mb="0" cb="0"/><line nr="61" mi="0" ci="32" mb="0" cb="2"/><line nr="62" mi="0" ci="20" mb="0" cb="0"/><line nr="64" mi="0" ci="18" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="43" mb="0" cb="2"/><line nr="75" mi="0" ci="50" mb="0" cb="6"/><line nr="76" mi="0" ci="20" mb="0" cb="0"/><line nr="78" mi="0" ci="18" mb="0" cb="0"/><line nr="79" mi="0" ci="21" mb="0" cb="2"/><line nr="80" mi="0" ci="9" mb="0" cb="0"/><line nr="82" mi="0" ci="21" mb="0" cb="0"/><line nr="83" mi="0" ci="32" mb="0" cb="2"/><line nr="84" mi="0" ci="22" mb="0" cb="0"/><line nr="86" mi="0" ci="18" mb="0" cb="0"/><line nr="91" mi="0" ci="36" mb="0" cb="2"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="14" mb="0" cb="0"/><line nr="94" mi="0" ci="13" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="9" ci="0" mb="0" cb="0"/><line nr="101" mi="9" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="111" mi="0" ci="34" mb="0" cb="2"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="376" covered="766"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="2" covered="42"/><counter type="COMPLEXITY" missed="4" covered="27"/><counter type="METHOD" missed="3" covered="15"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WordWrap.java"><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="21" mb="0" cb="0"/><line nr="38" mi="11" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="21" mb="0" cb="0"/><line nr="47" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="13" mb="0" cb="0"/><line nr="55" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="14" ci="0" mb="0" cb="0"/><line nr="63" mi="14" ci="0" mb="0" cb="0"/><line nr="68" mi="18" ci="0" mb="0" cb="0"/><line nr="69" mi="8" ci="0" mb="0" cb="0"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="10" ci="26" mb="1" cb="1"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="9" mb="0" cb="0"/><line nr="111" mi="0" ci="12" mb="0" cb="0"/><line nr="115" mi="0" ci="10" mb="0" cb="0"/><line nr="116" mi="0" ci="12" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="9" mb="0" cb="0"/><line nr="133" mi="0" ci="21" mb="0" cb="0"/><line nr="134" mi="8" ci="0" mb="0" cb="0"/><line nr="135" mi="12" ci="0" mb="0" cb="0"/><line nr="137" mi="11" ci="21" mb="3" cb="1"/><line nr="139" mi="10" ci="10" mb="0" cb="0"/><line nr="140" mi="16" ci="0" mb="0" cb="0"/><line nr="141" mi="24" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="8" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="17" mb="0" cb="0"/><line nr="148" mi="12" ci="18" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="69" ci="36" mb="6" cb="2"/><line nr="151" mi="12" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="17" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="0"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="0" ci="13" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="11" ci="0" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="0" cb="0"/><line nr="168" mi="12" ci="13" mb="0" cb="0"/><line nr="169" mi="0" ci="10" mb="0" cb="0"/><line nr="170" mi="0" ci="28" mb="0" cb="0"/><line nr="171" mi="71" ci="35" mb="6" cb="2"/><line nr="172" mi="12" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="11" mb="0" cb="0"/><line nr="180" mi="0" ci="33" mb="0" cb="2"/><line nr="181" mi="0" ci="14" mb="0" cb="0"/><line nr="183" mi="0" ci="18" mb="0" cb="0"/><line nr="189" mi="0" ci="11" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="193" mi="0" ci="9" mb="0" cb="0"/><line nr="194" mi="0" ci="9" mb="0" cb="0"/><line nr="195" mi="0" ci="9" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="0"/><line nr="198" mi="0" ci="21" mb="0" cb="2"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="19" mb="0" cb="0"/><line nr="202" mi="0" ci="59" mb="0" cb="4"/><line nr="203" mi="0" ci="21" mb="0" cb="2"/><line nr="204" mi="0" ci="11" mb="0" cb="0"/><line nr="205" mi="0" ci="21" mb="0" cb="2"/><line nr="206" mi="0" ci="11" mb="0" cb="0"/><line nr="208" mi="0" ci="19" mb="0" cb="0"/><line nr="209" mi="0" ci="10" mb="0" cb="0"/><line nr="210" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="10" mb="0" cb="0"/><line nr="212" mi="0" ci="31" mb="0" cb="2"/><line nr="214" mi="0" ci="42" mb="0" cb="4"/><line nr="215" mi="0" ci="11" mb="0" cb="0"/><line nr="216" mi="0" ci="34" mb="0" cb="4"/><line nr="217" mi="0" ci="9" mb="0" cb="0"/><line nr="219" mi="0" ci="32" mb="0" cb="2"/><line nr="220" mi="0" ci="21" mb="0" cb="2"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="222" mi="0" ci="9" mb="0" cb="0"/><line nr="223" mi="9" ci="14" mb="1" cb="1"/><line nr="224" mi="13" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="19" mb="0" cb="0"/><line nr="229" mi="0" ci="22" mb="0" cb="0"/><line nr="233" mi="0" ci="44" mb="0" cb="4"/><line nr="234" mi="0" ci="10" mb="0" cb="0"/><line nr="235" mi="0" ci="20" mb="0" cb="2"/><line nr="236" mi="0" ci="9" mb="0" cb="0"/><line nr="239" mi="0" ci="20" mb="0" cb="0"/><line nr="240" mi="0" ci="23" mb="0" cb="2"/><line nr="241" mi="10" ci="25" mb="1" cb="1"/><line nr="244" mi="0" ci="21" mb="1" cb="1"/><line nr="245" mi="0" ci="12" mb="0" cb="0"/><line nr="247" mi="19" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="9" mb="0" cb="0"/><line nr="252" mi="0" ci="59" mb="0" cb="4"/><line nr="253" mi="0" ci="8" mb="0" cb="0"/><line nr="254" mi="0" ci="21" mb="0" cb="2"/><line nr="255" mi="0" ci="18" mb="0" cb="0"/><line nr="256" mi="0" ci="20" mb="0" cb="2"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="259" mi="0" ci="19" mb="0" cb="0"/><line nr="260" mi="0" ci="8" mb="0" cb="0"/><line nr="261" mi="0" ci="29" mb="0" cb="2"/><line nr="262" mi="0" ci="9" mb="0" cb="0"/><line nr="264" mi="0" ci="30" mb="0" cb="2"/><line nr="265" mi="0" ci="11" mb="0" cb="0"/><line nr="268" mi="0" ci="17" mb="0" cb="0"/><line nr="271" mi="0" ci="13" mb="0" cb="0"/><line nr="275" mi="0" ci="36" mb="0" cb="2"/><line nr="280" mi="0" ci="39" mb="0" cb="2"/><line nr="285" mi="0" ci="10" mb="0" cb="0"/><line nr="286" mi="0" ci="20" mb="0" cb="2"/><line nr="287" mi="0" ci="25" mb="0" cb="2"/><line nr="288" mi="0" ci="9" mb="0" cb="0"/><line nr="293" mi="0" ci="31" mb="0" cb="2"/><line nr="294" mi="0" ci="12" mb="0" cb="0"/><line nr="296" mi="0" ci="18" mb="0" cb="0"/><line nr="301" mi="0" ci="42" mb="0" cb="2"/><line nr="302" mi="0" ci="23" mb="0" cb="2"/><line nr="303" mi="0" ci="9" mb="0" cb="0"/><line nr="306" mi="0" ci="18" mb="0" cb="0"/><line nr="314" mi="0" ci="42" mb="1" cb="1"/><line nr="315" mi="0" ci="23" mb="0" cb="2"/><line nr="316" mi="0" ci="8" mb="0" cb="0"/><line nr="319" mi="0" ci="44" mb="1" cb="3"/><line nr="320" mi="0" ci="12" mb="0" cb="0"/><line nr="322" mi="0" ci="17" mb="0" cb="0"/><line nr="325" mi="0" ci="12" mb="0" cb="0"/><line nr="326" mi="0" ci="9" mb="0" cb="0"/><line nr="327" mi="0" ci="10" mb="0" cb="0"/><line nr="331" mi="0" ci="12" mb="0" cb="0"/><line nr="332" mi="0" ci="10" mb="0" cb="0"/><line nr="333" mi="0" ci="8" mb="0" cb="0"/><line nr="340" mi="0" ci="38" mb="1" cb="3"/><line nr="341" mi="0" ci="26" mb="0" cb="2"/><line nr="342" mi="0" ci="10" mb="0" cb="0"/><line nr="343" mi="0" ci="10" mb="0" cb="0"/><line nr="344" mi="0" ci="10" mb="0" cb="0"/><line nr="345" mi="0" ci="16" mb="0" cb="0"/><line nr="347" mi="0" ci="24" mb="0" cb="0"/><line nr="348" mi="0" ci="21" mb="0" cb="2"/><line nr="349" mi="0" ci="10" mb="0" cb="0"/><line nr="351" mi="0" ci="19" mb="0" cb="0"/><line nr="352" mi="0" ci="15" mb="0" cb="0"/><line nr="354" mi="0" ci="8" mb="0" cb="0"/><line nr="358" mi="0" ci="11" mb="0" cb="0"/><line nr="359" mi="0" ci="10" mb="0" cb="0"/><line nr="360" mi="0" ci="10" mb="0" cb="0"/><line nr="361" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1846" covered="2637"/><counter type="BRANCH" missed="23" covered="85"/><counter type="LINE" missed="17" covered="155"/><counter type="COMPLEXITY" missed="29" covered="72"/><counter type="METHOD" missed="11" covered="36"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IORuntimeException.java"><line nr="10" mi="10" ci="0" mb="0" cb="0"/><line nr="11" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CharSequenceConcatRightTrim.java"><line nr="8" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="10" mb="0" cb="0"/><line nr="10" mi="0" ci="10" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="17" mb="0" cb="0"/><line nr="16" mi="0" ci="36" mb="0" cb="4"/><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="20" mb="0" cb="0"/><line nr="24" mi="0" ci="23" mb="0" cb="2"/><line nr="25" mi="0" ci="12" mb="0" cb="0"/><line nr="27" mi="0" ci="25" mb="0" cb="0"/><line nr="33" mi="0" ci="33" mb="0" cb="0"/><line nr="37" mi="0" ci="13" mb="0" cb="0"/><line nr="42" mi="0" ci="15" mb="0" cb="0"/><line nr="48" mi="0" ci="14" mb="0" cb="0"/><line nr="49" mi="0" ci="32" mb="0" cb="2"/><line nr="50" mi="0" ci="13" mb="0" cb="0"/><line nr="52" mi="0" ci="18" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="32" mb="0" cb="2"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="62" mi="0" ci="19" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="32" mb="0" cb="2"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="75" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="266" covered="527"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="8" covered="20"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="2552" covered="3930"/><counter type="BRANCH" missed="28" covered="124"/><counter type="LINE" missed="21" covered="225"/><counter type="COMPLEXITY" missed="48" covered="119"/><counter type="METHOD" missed="26" covered="65"/><counter type="CLASS" missed="1" covered="5"/></package><counter type="INSTRUCTION" missed="2552" covered="3930"/><counter type="BRANCH" missed="28" covered="124"/><counter type="LINE" missed="21" covered="225"/><counter type="COMPLEXITY" missed="48" covered="119"/><counter type="METHOD" missed="26" covered="65"/><counter type="CLASS" missed="1" covered="5"/></report>